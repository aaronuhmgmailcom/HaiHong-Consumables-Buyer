//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StockDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StockDataSet : global::System.Data.DataSet {
        
        private HC_ORD_ORD_STOCKDataTable tableHC_ORD_ORD_STOCK;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StockDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HC_ORD_ORD_STOCK"] != null)) {
                    base.Tables.Add(new HC_ORD_ORD_STOCKDataTable(ds.Tables["HC_ORD_ORD_STOCK"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HC_ORD_ORD_STOCKDataTable HC_ORD_ORD_STOCK {
            get {
                return this.tableHC_ORD_ORD_STOCK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StockDataSet cln = ((StockDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HC_ORD_ORD_STOCK"] != null)) {
                    base.Tables.Add(new HC_ORD_ORD_STOCKDataTable(ds.Tables["HC_ORD_ORD_STOCK"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHC_ORD_ORD_STOCK = ((HC_ORD_ORD_STOCKDataTable)(base.Tables["HC_ORD_ORD_STOCK"]));
            if ((initTable == true)) {
                if ((this.tableHC_ORD_ORD_STOCK != null)) {
                    this.tableHC_ORD_ORD_STOCK.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StockDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StockDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHC_ORD_ORD_STOCK = new HC_ORD_ORD_STOCKDataTable();
            base.Tables.Add(this.tableHC_ORD_ORD_STOCK);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHC_ORD_ORD_STOCK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StockDataSet ds = new StockDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HC_ORD_ORD_STOCKRowChangeEventHandler(object sender, HC_ORD_ORD_STOCKRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HC_ORD_ORD_STOCKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columncode;
            
            private global::System.Data.DataColumn columncreate_user_name;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columnsender_name;
            
            private global::System.Data.DataColumn columnremark;
            
            private global::System.Data.DataColumn columnproduct_name;
            
            private global::System.Data.DataColumn columnmanufacture_name;
            
            private global::System.Data.DataColumn columnspec;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnbarcode;
            
            private global::System.Data.DataColumn columnbatch_no;
            
            private global::System.Data.DataColumn columnnum;
            
            private global::System.Data.DataColumn columnvalid_date;
            
            private global::System.Data.DataColumn columnprice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCKDataTable() {
                this.TableName = "HC_ORD_ORD_STOCK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_ORD_STOCKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HC_ORD_ORD_STOCKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn codeColumn {
                get {
                    return this.columncode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_user_nameColumn {
                get {
                    return this.columncreate_user_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sender_nameColumn {
                get {
                    return this.columnsender_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn remarkColumn {
                get {
                    return this.columnremark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn product_nameColumn {
                get {
                    return this.columnproduct_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn manufacture_nameColumn {
                get {
                    return this.columnmanufacture_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn specColumn {
                get {
                    return this.columnspec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn barcodeColumn {
                get {
                    return this.columnbarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn batch_noColumn {
                get {
                    return this.columnbatch_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn numColumn {
                get {
                    return this.columnnum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn valid_dateColumn {
                get {
                    return this.columnvalid_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn priceColumn {
                get {
                    return this.columnprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCKRow this[int index] {
                get {
                    return ((HC_ORD_ORD_STOCKRow)(this.Rows[index]));
                }
            }
            
            public event HC_ORD_ORD_STOCKRowChangeEventHandler HC_ORD_ORD_STOCKRowChanging;
            
            public event HC_ORD_ORD_STOCKRowChangeEventHandler HC_ORD_ORD_STOCKRowChanged;
            
            public event HC_ORD_ORD_STOCKRowChangeEventHandler HC_ORD_ORD_STOCKRowDeleting;
            
            public event HC_ORD_ORD_STOCKRowChangeEventHandler HC_ORD_ORD_STOCKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHC_ORD_ORD_STOCKRow(HC_ORD_ORD_STOCKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCKRow AddHC_ORD_ORD_STOCKRow(string code, string create_user_name, System.DateTime create_date, string state, string sender_name, string remark, string product_name, string manufacture_name, string spec, string model, string barcode, string batch_no, decimal num, System.DateTime valid_date, decimal price) {
                HC_ORD_ORD_STOCKRow rowHC_ORD_ORD_STOCKRow = ((HC_ORD_ORD_STOCKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        code,
                        create_user_name,
                        create_date,
                        state,
                        sender_name,
                        remark,
                        product_name,
                        manufacture_name,
                        spec,
                        model,
                        barcode,
                        batch_no,
                        num,
                        valid_date,
                        price};
                rowHC_ORD_ORD_STOCKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHC_ORD_ORD_STOCKRow);
                return rowHC_ORD_ORD_STOCKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HC_ORD_ORD_STOCKDataTable cln = ((HC_ORD_ORD_STOCKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HC_ORD_ORD_STOCKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncode = base.Columns["code"];
                this.columncreate_user_name = base.Columns["create_user_name"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnstate = base.Columns["state"];
                this.columnsender_name = base.Columns["sender_name"];
                this.columnremark = base.Columns["remark"];
                this.columnproduct_name = base.Columns["product_name"];
                this.columnmanufacture_name = base.Columns["manufacture_name"];
                this.columnspec = base.Columns["spec"];
                this.columnmodel = base.Columns["model"];
                this.columnbarcode = base.Columns["barcode"];
                this.columnbatch_no = base.Columns["batch_no"];
                this.columnnum = base.Columns["num"];
                this.columnvalid_date = base.Columns["valid_date"];
                this.columnprice = base.Columns["price"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncode = new global::System.Data.DataColumn("code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode);
                this.columncreate_user_name = new global::System.Data.DataColumn("create_user_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user_name);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnsender_name = new global::System.Data.DataColumn("sender_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsender_name);
                this.columnremark = new global::System.Data.DataColumn("remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnremark);
                this.columnproduct_name = new global::System.Data.DataColumn("product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduct_name);
                this.columnmanufacture_name = new global::System.Data.DataColumn("manufacture_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanufacture_name);
                this.columnspec = new global::System.Data.DataColumn("spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnspec);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnbarcode = new global::System.Data.DataColumn("barcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbarcode);
                this.columnbatch_no = new global::System.Data.DataColumn("batch_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbatch_no);
                this.columnnum = new global::System.Data.DataColumn("num", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnum);
                this.columnvalid_date = new global::System.Data.DataColumn("valid_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalid_date);
                this.columnprice = new global::System.Data.DataColumn("price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice);
                this.columncode.AllowDBNull = false;
                this.columncode.MaxLength = 50;
                this.columncreate_user_name.AllowDBNull = false;
                this.columncreate_user_name.MaxLength = 200;
                this.columncreate_date.AllowDBNull = false;
                this.columnstate.AllowDBNull = false;
                this.columnstate.MaxLength = 1;
                this.columnsender_name.AllowDBNull = false;
                this.columnsender_name.MaxLength = 150;
                this.columnremark.MaxLength = 1000;
                this.columnproduct_name.MaxLength = 100;
                this.columnmanufacture_name.MaxLength = 150;
                this.columnspec.MaxLength = 4000;
                this.columnmodel.MaxLength = 3000;
                this.columnbarcode.MaxLength = 50;
                this.columnbatch_no.MaxLength = 128;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCKRow NewHC_ORD_ORD_STOCKRow() {
                return ((HC_ORD_ORD_STOCKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HC_ORD_ORD_STOCKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HC_ORD_ORD_STOCKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HC_ORD_ORD_STOCKRowChanged != null)) {
                    this.HC_ORD_ORD_STOCKRowChanged(this, new HC_ORD_ORD_STOCKRowChangeEvent(((HC_ORD_ORD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HC_ORD_ORD_STOCKRowChanging != null)) {
                    this.HC_ORD_ORD_STOCKRowChanging(this, new HC_ORD_ORD_STOCKRowChangeEvent(((HC_ORD_ORD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HC_ORD_ORD_STOCKRowDeleted != null)) {
                    this.HC_ORD_ORD_STOCKRowDeleted(this, new HC_ORD_ORD_STOCKRowChangeEvent(((HC_ORD_ORD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HC_ORD_ORD_STOCKRowDeleting != null)) {
                    this.HC_ORD_ORD_STOCKRowDeleting(this, new HC_ORD_ORD_STOCKRowChangeEvent(((HC_ORD_ORD_STOCKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHC_ORD_ORD_STOCKRow(HC_ORD_ORD_STOCKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockDataSet ds = new StockDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HC_ORD_ORD_STOCKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HC_ORD_ORD_STOCKRow : global::System.Data.DataRow {
            
            private HC_ORD_ORD_STOCKDataTable tableHC_ORD_ORD_STOCK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_ORD_STOCKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHC_ORD_ORD_STOCK = ((HC_ORD_ORD_STOCKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK.codeColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user_name {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK.create_user_nameColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.create_user_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableHC_ORD_ORD_STOCK.create_dateColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK.stateColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sender_name {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK.sender_nameColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.sender_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string remark {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK.remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string product_name {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK.product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“product_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string manufacture_name {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK.manufacture_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“manufacture_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.manufacture_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string spec {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK.specColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“spec”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.specColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“model”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string barcode {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK.barcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“barcode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.barcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string batch_no {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK.batch_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“batch_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.batch_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal num {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK.numColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“num”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.numColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime valid_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHC_ORD_ORD_STOCK.valid_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“valid_date”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.valid_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal price {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK.priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK”中列“price”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK.priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsremarkNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetremarkNull() {
                this[this.tableHC_ORD_ORD_STOCK.remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduct_nameNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduct_nameNull() {
                this[this.tableHC_ORD_ORD_STOCK.product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismanufacture_nameNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.manufacture_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmanufacture_nameNull() {
                this[this.tableHC_ORD_ORD_STOCK.manufacture_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsspecNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.specColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetspecNull() {
                this[this.tableHC_ORD_ORD_STOCK.specColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tableHC_ORD_ORD_STOCK.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbarcodeNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.barcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbarcodeNull() {
                this[this.tableHC_ORD_ORD_STOCK.barcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbatch_noNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.batch_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbatch_noNull() {
                this[this.tableHC_ORD_ORD_STOCK.batch_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnumNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.numColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnumNull() {
                this[this.tableHC_ORD_ORD_STOCK.numColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvalid_dateNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.valid_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvalid_dateNull() {
                this[this.tableHC_ORD_ORD_STOCK.valid_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspriceNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK.priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpriceNull() {
                this[this.tableHC_ORD_ORD_STOCK.priceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HC_ORD_ORD_STOCKRowChangeEvent : global::System.EventArgs {
            
            private HC_ORD_ORD_STOCKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCKRowChangeEvent(HC_ORD_ORD_STOCKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData.StockDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HC_ORD_ORD_STOCKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HC_ORD_ORD_STOCKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HC_ORD_ORD_STOCK";
            tableMapping.ColumnMappings.Add("code", "code");
            tableMapping.ColumnMappings.Add("create_user_name", "create_user_name");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("sender_name", "sender_name");
            tableMapping.ColumnMappings.Add("remark", "remark");
            tableMapping.ColumnMappings.Add("product_name", "product_name");
            tableMapping.ColumnMappings.Add("manufacture_name", "manufacture_name");
            tableMapping.ColumnMappings.Add("spec", "spec");
            tableMapping.ColumnMappings.Add("model", "model");
            tableMapping.ColumnMappings.Add("barcode", "barcode");
            tableMapping.ColumnMappings.Add("batch_no", "batch_no");
            tableMapping.ColumnMappings.Add("num", "num");
            tableMapping.ColumnMappings.Add("valid_date", "valid_date");
            tableMapping.ColumnMappings.Add("price", "price");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Emedchina.TradeAssistant.Client.Properties.Settings.Default.TradeAssistantConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @" select hs.code,
             hs.create_user_name,
             hs.create_date,
             hs.state,
             hs.sender_name,
             hs.remark,
             hi.product_name,
             hi.manufacture_name,
             hi.spec,
             hi.model,
             hi.barcode,
             hi.batch_no,
             hi.num,      
             hop.price,
             hi.valid_date      
      from hc_ord_ord_stock hs left join hc_ord_ord_stock_item hi
      on hs.id = hi.stock_id left join hc_ord_product hop on hop.id = hi.project_prod_id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @" select hs.code,
             hs.create_user_name,
             hs.create_date,
             hs.state,
             hs.sender_name,
             hs.remark,
             hi.product_name,
             hi.manufacture_name,
             hi.spec,
             hi.model,
             hi.barcode,
             hi.batch_no,
             hi.num,
             hop.price,
             hi.valid_date      
      from hc_ord_ord_stock hs left join hc_ord_ord_stock_item hi
      on hs.id = hi.stock_id  left join hc_ord_product   hop  on hi.project_prod_id = hop.id";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StockDataSet.HC_ORD_ORD_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StockDataSet.HC_ORD_ORD_STOCKDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StockDataSet.HC_ORD_ORD_STOCKDataTable dataTable = new StockDataSet.HC_ORD_ORD_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(StockDataSet.HC_ORD_ORD_STOCKDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual StockDataSet.HC_ORD_ORD_STOCKDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            StockDataSet.HC_ORD_ORD_STOCKDataTable dataTable = new StockDataSet.HC_ORD_ORD_STOCKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591
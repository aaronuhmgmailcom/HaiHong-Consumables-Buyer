//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("OOSQueryDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class OOSQueryDataSet : global::System.Data.DataSet {
        
        private HC_ORD_HIT_COMMDataTable tableHC_ORD_HIT_COMM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OOSQueryDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected OOSQueryDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HC_ORD_HIT_COMM"] != null)) {
                    base.Tables.Add(new HC_ORD_HIT_COMMDataTable(ds.Tables["HC_ORD_HIT_COMM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HC_ORD_HIT_COMMDataTable HC_ORD_HIT_COMM {
            get {
                return this.tableHC_ORD_HIT_COMM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            OOSQueryDataSet cln = ((OOSQueryDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HC_ORD_HIT_COMM"] != null)) {
                    base.Tables.Add(new HC_ORD_HIT_COMMDataTable(ds.Tables["HC_ORD_HIT_COMM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHC_ORD_HIT_COMM = ((HC_ORD_HIT_COMMDataTable)(base.Tables["HC_ORD_HIT_COMM"]));
            if ((initTable == true)) {
                if ((this.tableHC_ORD_HIT_COMM != null)) {
                    this.tableHC_ORD_HIT_COMM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "OOSQueryDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/OOSQueryDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHC_ORD_HIT_COMM = new HC_ORD_HIT_COMMDataTable();
            base.Tables.Add(this.tableHC_ORD_HIT_COMM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHC_ORD_HIT_COMM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            OOSQueryDataSet ds = new OOSQueryDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HC_ORD_HIT_COMMRowChangeEventHandler(object sender, HC_ORD_HIT_COMMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HC_ORD_HIT_COMMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPROJECT_ID;
            
            private global::System.Data.DataColumn columnDATA_PRODUCT_ID;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnCOMMERCE_NAME;
            
            private global::System.Data.DataColumn columnCOMMON_NAME;
            
            private global::System.Data.DataColumn columnBRAND;
            
            private global::System.Data.DataColumn columnMODEL;
            
            private global::System.Data.DataColumn columnSPEC;
            
            private global::System.Data.DataColumn columnPRICE;
            
            private global::System.Data.DataColumn columnMANU_ID;
            
            private global::System.Data.DataColumn columnMANU_NAME;
            
            private global::System.Data.DataColumn columnMANU_NAME_ABBR;
            
            private global::System.Data.DataColumn columnSALER_ID;
            
            private global::System.Data.DataColumn columnSALER_NAME;
            
            private global::System.Data.DataColumn columnSALER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnDEFAULT_MEASURE;
            
            private global::System.Data.DataColumn columnSENDER_ID;
            
            private global::System.Data.DataColumn columnSENDER_NAME;
            
            private global::System.Data.DataColumn columnSENDER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnSTATE;
            
            private global::System.Data.DataColumn columnPROJECT_TYPE;
            
            private global::System.Data.DataColumn columnPROJECT_TYPE_Name;
            
            private global::System.Data.DataColumn columnCLASS_ID;
            
            private global::System.Data.DataColumn columnMANU_NAME_SPELL_ABBR;
            
            private global::System.Data.DataColumn columnMANU_NAME_WB;
            
            private global::System.Data.DataColumn columnSALER_NAME_SPELL_ABBR;
            
            private global::System.Data.DataColumn columnSALER_NAME_WB;
            
            private global::System.Data.DataColumn columnSENDER_NAME_SPELL_ABBR;
            
            private global::System.Data.DataColumn columnSENDER_NAME_WB;
            
            private global::System.Data.DataColumn columnIS_OOS;
            
            private global::System.Data.DataColumn columnStateName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_HIT_COMMDataTable() {
                this.TableName = "HC_ORD_HIT_COMM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_HIT_COMMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HC_ORD_HIT_COMMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_IDColumn {
                get {
                    return this.columnPROJECT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_PRODUCT_IDColumn {
                get {
                    return this.columnDATA_PRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMERCE_NAMEColumn {
                get {
                    return this.columnCOMMERCE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMON_NAMEColumn {
                get {
                    return this.columnCOMMON_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDColumn {
                get {
                    return this.columnBRAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELColumn {
                get {
                    return this.columnMODEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECColumn {
                get {
                    return this.columnSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_IDColumn {
                get {
                    return this.columnMANU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAMEColumn {
                get {
                    return this.columnMANU_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAME_ABBRColumn {
                get {
                    return this.columnMANU_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_IDColumn {
                get {
                    return this.columnSALER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAMEColumn {
                get {
                    return this.columnSALER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_ABBRColumn {
                get {
                    return this.columnSALER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_MEASUREColumn {
                get {
                    return this.columnDEFAULT_MEASURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_IDColumn {
                get {
                    return this.columnSENDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAMEColumn {
                get {
                    return this.columnSENDER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_ABBRColumn {
                get {
                    return this.columnSENDER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_TYPEColumn {
                get {
                    return this.columnPROJECT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_TYPE_NameColumn {
                get {
                    return this.columnPROJECT_TYPE_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLASS_IDColumn {
                get {
                    return this.columnCLASS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAME_SPELL_ABBRColumn {
                get {
                    return this.columnMANU_NAME_SPELL_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAME_WBColumn {
                get {
                    return this.columnMANU_NAME_WB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_SPELL_ABBRColumn {
                get {
                    return this.columnSALER_NAME_SPELL_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_WBColumn {
                get {
                    return this.columnSALER_NAME_WB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_SPELL_ABBRColumn {
                get {
                    return this.columnSENDER_NAME_SPELL_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_WBColumn {
                get {
                    return this.columnSENDER_NAME_WB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_OOSColumn {
                get {
                    return this.columnIS_OOS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateNameColumn {
                get {
                    return this.columnStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_HIT_COMMRow this[int index] {
                get {
                    return ((HC_ORD_HIT_COMMRow)(this.Rows[index]));
                }
            }
            
            public event HC_ORD_HIT_COMMRowChangeEventHandler HC_ORD_HIT_COMMRowChanging;
            
            public event HC_ORD_HIT_COMMRowChangeEventHandler HC_ORD_HIT_COMMRowChanged;
            
            public event HC_ORD_HIT_COMMRowChangeEventHandler HC_ORD_HIT_COMMRowDeleting;
            
            public event HC_ORD_HIT_COMMRowChangeEventHandler HC_ORD_HIT_COMMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHC_ORD_HIT_COMMRow(HC_ORD_HIT_COMMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_HIT_COMMRow AddHC_ORD_HIT_COMMRow(
                        decimal ID, 
                        decimal PROJECT_ID, 
                        decimal DATA_PRODUCT_ID, 
                        string PRODUCT_NAME, 
                        string COMMERCE_NAME, 
                        string COMMON_NAME, 
                        string BRAND, 
                        string MODEL, 
                        string SPEC, 
                        decimal PRICE, 
                        decimal MANU_ID, 
                        string MANU_NAME, 
                        string MANU_NAME_ABBR, 
                        decimal SALER_ID, 
                        string SALER_NAME, 
                        string SALER_NAME_ABBR, 
                        string DEFAULT_MEASURE, 
                        decimal SENDER_ID, 
                        string SENDER_NAME, 
                        string SENDER_NAME_ABBR, 
                        string STATE, 
                        string PROJECT_TYPE, 
                        string PROJECT_TYPE_Name, 
                        decimal CLASS_ID, 
                        string MANU_NAME_SPELL_ABBR, 
                        string MANU_NAME_WB, 
                        string SALER_NAME_SPELL_ABBR, 
                        string SALER_NAME_WB, 
                        string SENDER_NAME_SPELL_ABBR, 
                        string SENDER_NAME_WB, 
                        string IS_OOS, 
                        string StateName) {
                HC_ORD_HIT_COMMRow rowHC_ORD_HIT_COMMRow = ((HC_ORD_HIT_COMMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        PROJECT_ID,
                        DATA_PRODUCT_ID,
                        PRODUCT_NAME,
                        COMMERCE_NAME,
                        COMMON_NAME,
                        BRAND,
                        MODEL,
                        SPEC,
                        PRICE,
                        MANU_ID,
                        MANU_NAME,
                        MANU_NAME_ABBR,
                        SALER_ID,
                        SALER_NAME,
                        SALER_NAME_ABBR,
                        DEFAULT_MEASURE,
                        SENDER_ID,
                        SENDER_NAME,
                        SENDER_NAME_ABBR,
                        STATE,
                        PROJECT_TYPE,
                        PROJECT_TYPE_Name,
                        CLASS_ID,
                        MANU_NAME_SPELL_ABBR,
                        MANU_NAME_WB,
                        SALER_NAME_SPELL_ABBR,
                        SALER_NAME_WB,
                        SENDER_NAME_SPELL_ABBR,
                        SENDER_NAME_WB,
                        IS_OOS,
                        StateName};
                rowHC_ORD_HIT_COMMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHC_ORD_HIT_COMMRow);
                return rowHC_ORD_HIT_COMMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_HIT_COMMRow FindByID(decimal ID) {
                return ((HC_ORD_HIT_COMMRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HC_ORD_HIT_COMMDataTable cln = ((HC_ORD_HIT_COMMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HC_ORD_HIT_COMMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPROJECT_ID = base.Columns["PROJECT_ID"];
                this.columnDATA_PRODUCT_ID = base.Columns["DATA_PRODUCT_ID"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnCOMMERCE_NAME = base.Columns["COMMERCE_NAME"];
                this.columnCOMMON_NAME = base.Columns["COMMON_NAME"];
                this.columnBRAND = base.Columns["BRAND"];
                this.columnMODEL = base.Columns["MODEL"];
                this.columnSPEC = base.Columns["SPEC"];
                this.columnPRICE = base.Columns["PRICE"];
                this.columnMANU_ID = base.Columns["MANU_ID"];
                this.columnMANU_NAME = base.Columns["MANU_NAME"];
                this.columnMANU_NAME_ABBR = base.Columns["MANU_NAME_ABBR"];
                this.columnSALER_ID = base.Columns["SALER_ID"];
                this.columnSALER_NAME = base.Columns["SALER_NAME"];
                this.columnSALER_NAME_ABBR = base.Columns["SALER_NAME_ABBR"];
                this.columnDEFAULT_MEASURE = base.Columns["DEFAULT_MEASURE"];
                this.columnSENDER_ID = base.Columns["SENDER_ID"];
                this.columnSENDER_NAME = base.Columns["SENDER_NAME"];
                this.columnSENDER_NAME_ABBR = base.Columns["SENDER_NAME_ABBR"];
                this.columnSTATE = base.Columns["STATE"];
                this.columnPROJECT_TYPE = base.Columns["PROJECT_TYPE"];
                this.columnPROJECT_TYPE_Name = base.Columns["PROJECT_TYPE_Name"];
                this.columnCLASS_ID = base.Columns["CLASS_ID"];
                this.columnMANU_NAME_SPELL_ABBR = base.Columns["MANU_NAME_SPELL_ABBR"];
                this.columnMANU_NAME_WB = base.Columns["MANU_NAME_WB"];
                this.columnSALER_NAME_SPELL_ABBR = base.Columns["SALER_NAME_SPELL_ABBR"];
                this.columnSALER_NAME_WB = base.Columns["SALER_NAME_WB"];
                this.columnSENDER_NAME_SPELL_ABBR = base.Columns["SENDER_NAME_SPELL_ABBR"];
                this.columnSENDER_NAME_WB = base.Columns["SENDER_NAME_WB"];
                this.columnIS_OOS = base.Columns["IS_OOS"];
                this.columnStateName = base.Columns["StateName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPROJECT_ID = new global::System.Data.DataColumn("PROJECT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_ID);
                this.columnDATA_PRODUCT_ID = new global::System.Data.DataColumn("DATA_PRODUCT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_PRODUCT_ID);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnCOMMERCE_NAME = new global::System.Data.DataColumn("COMMERCE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMERCE_NAME);
                this.columnCOMMON_NAME = new global::System.Data.DataColumn("COMMON_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMON_NAME);
                this.columnBRAND = new global::System.Data.DataColumn("BRAND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRAND);
                this.columnMODEL = new global::System.Data.DataColumn("MODEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL);
                this.columnSPEC = new global::System.Data.DataColumn("SPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEC);
                this.columnPRICE = new global::System.Data.DataColumn("PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columnMANU_ID = new global::System.Data.DataColumn("MANU_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_ID);
                this.columnMANU_NAME = new global::System.Data.DataColumn("MANU_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME);
                this.columnMANU_NAME_ABBR = new global::System.Data.DataColumn("MANU_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME_ABBR);
                this.columnSALER_ID = new global::System.Data.DataColumn("SALER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_ID);
                this.columnSALER_NAME = new global::System.Data.DataColumn("SALER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME);
                this.columnSALER_NAME_ABBR = new global::System.Data.DataColumn("SALER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_ABBR);
                this.columnDEFAULT_MEASURE = new global::System.Data.DataColumn("DEFAULT_MEASURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_MEASURE);
                this.columnSENDER_ID = new global::System.Data.DataColumn("SENDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_ID);
                this.columnSENDER_NAME = new global::System.Data.DataColumn("SENDER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME);
                this.columnSENDER_NAME_ABBR = new global::System.Data.DataColumn("SENDER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_ABBR);
                this.columnSTATE = new global::System.Data.DataColumn("STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.columnPROJECT_TYPE = new global::System.Data.DataColumn("PROJECT_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_TYPE);
                this.columnPROJECT_TYPE_Name = new global::System.Data.DataColumn("PROJECT_TYPE_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_TYPE_Name);
                this.columnCLASS_ID = new global::System.Data.DataColumn("CLASS_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLASS_ID);
                this.columnMANU_NAME_SPELL_ABBR = new global::System.Data.DataColumn("MANU_NAME_SPELL_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME_SPELL_ABBR);
                this.columnMANU_NAME_WB = new global::System.Data.DataColumn("MANU_NAME_WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME_WB);
                this.columnSALER_NAME_SPELL_ABBR = new global::System.Data.DataColumn("SALER_NAME_SPELL_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_SPELL_ABBR);
                this.columnSALER_NAME_WB = new global::System.Data.DataColumn("SALER_NAME_WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_WB);
                this.columnSENDER_NAME_SPELL_ABBR = new global::System.Data.DataColumn("SENDER_NAME_SPELL_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_SPELL_ABBR);
                this.columnSENDER_NAME_WB = new global::System.Data.DataColumn("SENDER_NAME_WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_WB);
                this.columnIS_OOS = new global::System.Data.DataColumn("IS_OOS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_OOS);
                this.columnStateName = new global::System.Data.DataColumn("StateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnPROJECT_ID.AllowDBNull = false;
                this.columnPRODUCT_NAME.AllowDBNull = false;
                this.columnPRODUCT_NAME.MaxLength = 100;
                this.columnCOMMERCE_NAME.AllowDBNull = false;
                this.columnCOMMERCE_NAME.MaxLength = 100;
                this.columnCOMMON_NAME.AllowDBNull = false;
                this.columnCOMMON_NAME.MaxLength = 100;
                this.columnBRAND.AllowDBNull = false;
                this.columnBRAND.MaxLength = 100;
                this.columnMODEL.AllowDBNull = false;
                this.columnMODEL.MaxLength = 3000;
                this.columnSPEC.AllowDBNull = false;
                this.columnSPEC.MaxLength = 4000;
                this.columnPRICE.AllowDBNull = false;
                this.columnMANU_ID.AllowDBNull = false;
                this.columnMANU_NAME.AllowDBNull = false;
                this.columnMANU_NAME.MaxLength = 100;
                this.columnMANU_NAME_ABBR.AllowDBNull = false;
                this.columnMANU_NAME_ABBR.MaxLength = 50;
                this.columnSALER_ID.AllowDBNull = false;
                this.columnSALER_NAME.AllowDBNull = false;
                this.columnSALER_NAME.MaxLength = 100;
                this.columnSALER_NAME_ABBR.AllowDBNull = false;
                this.columnSALER_NAME_ABBR.MaxLength = 50;
                this.columnDEFAULT_MEASURE.AllowDBNull = false;
                this.columnDEFAULT_MEASURE.MaxLength = 50;
                this.columnSENDER_NAME.AllowDBNull = false;
                this.columnSENDER_NAME.MaxLength = 150;
                this.columnSENDER_NAME_ABBR.AllowDBNull = false;
                this.columnSENDER_NAME_ABBR.MaxLength = 150;
                this.columnSTATE.AllowDBNull = false;
                this.columnSTATE.MaxLength = 1;
                this.columnPROJECT_TYPE.AllowDBNull = false;
                this.columnPROJECT_TYPE.MaxLength = 1;
                this.columnPROJECT_TYPE_Name.ReadOnly = true;
                this.columnPROJECT_TYPE_Name.MaxLength = 8;
                this.columnCLASS_ID.AllowDBNull = false;
                this.columnMANU_NAME_SPELL_ABBR.AllowDBNull = false;
                this.columnMANU_NAME_SPELL_ABBR.MaxLength = 50;
                this.columnMANU_NAME_WB.MaxLength = 50;
                this.columnSALER_NAME_SPELL_ABBR.AllowDBNull = false;
                this.columnSALER_NAME_SPELL_ABBR.MaxLength = 50;
                this.columnSALER_NAME_WB.MaxLength = 50;
                this.columnSENDER_NAME_SPELL_ABBR.AllowDBNull = false;
                this.columnSENDER_NAME_SPELL_ABBR.MaxLength = 50;
                this.columnSENDER_NAME_WB.MaxLength = 50;
                this.columnIS_OOS.AllowDBNull = false;
                this.columnIS_OOS.MaxLength = 1;
                this.columnStateName.ReadOnly = true;
                this.columnStateName.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_HIT_COMMRow NewHC_ORD_HIT_COMMRow() {
                return ((HC_ORD_HIT_COMMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HC_ORD_HIT_COMMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HC_ORD_HIT_COMMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HC_ORD_HIT_COMMRowChanged != null)) {
                    this.HC_ORD_HIT_COMMRowChanged(this, new HC_ORD_HIT_COMMRowChangeEvent(((HC_ORD_HIT_COMMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HC_ORD_HIT_COMMRowChanging != null)) {
                    this.HC_ORD_HIT_COMMRowChanging(this, new HC_ORD_HIT_COMMRowChangeEvent(((HC_ORD_HIT_COMMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HC_ORD_HIT_COMMRowDeleted != null)) {
                    this.HC_ORD_HIT_COMMRowDeleted(this, new HC_ORD_HIT_COMMRowChangeEvent(((HC_ORD_HIT_COMMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HC_ORD_HIT_COMMRowDeleting != null)) {
                    this.HC_ORD_HIT_COMMRowDeleting(this, new HC_ORD_HIT_COMMRowChangeEvent(((HC_ORD_HIT_COMMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHC_ORD_HIT_COMMRow(HC_ORD_HIT_COMMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                OOSQueryDataSet ds = new OOSQueryDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HC_ORD_HIT_COMMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HC_ORD_HIT_COMMRow : global::System.Data.DataRow {
            
            private HC_ORD_HIT_COMMDataTable tableHC_ORD_HIT_COMM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_HIT_COMMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHC_ORD_HIT_COMM = ((HC_ORD_HIT_COMMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_HIT_COMM.IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROJECT_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_HIT_COMM.PROJECT_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.PROJECT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DATA_PRODUCT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_HIT_COMM.DATA_PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_HIT_COMM”中列“DATA_PRODUCT_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.DATA_PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.PRODUCT_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMERCE_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.COMMERCE_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.COMMERCE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMON_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.COMMON_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.COMMON_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRAND {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.BRANDColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.BRANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODEL {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.MODELColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.MODELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPEC {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.SPECColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRICE {
                get {
                    return ((decimal)(this[this.tableHC_ORD_HIT_COMM.PRICEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MANU_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_HIT_COMM.MANU_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.MANU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.MANU_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.MANU_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.MANU_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.MANU_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALER_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_HIT_COMM.SALER_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SALER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.SALER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SALER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.SALER_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SALER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEFAULT_MEASURE {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.DEFAULT_MEASUREColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.DEFAULT_MEASUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SENDER_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_HIT_COMM.SENDER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_HIT_COMM”中列“SENDER_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SENDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.SENDER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SENDER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.SENDER_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SENDER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATE {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.STATEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROJECT_TYPE {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.PROJECT_TYPEColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.PROJECT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROJECT_TYPE_Name {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_HIT_COMM.PROJECT_TYPE_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_HIT_COMM”中列“PROJECT_TYPE_Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.PROJECT_TYPE_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CLASS_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_HIT_COMM.CLASS_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.CLASS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME_SPELL_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.MANU_NAME_SPELL_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.MANU_NAME_SPELL_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME_WB {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_HIT_COMM.MANU_NAME_WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_HIT_COMM”中列“MANU_NAME_WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.MANU_NAME_WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_SPELL_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.SALER_NAME_SPELL_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SALER_NAME_SPELL_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_WB {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_HIT_COMM.SALER_NAME_WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_HIT_COMM”中列“SALER_NAME_WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SALER_NAME_WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_SPELL_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.SENDER_NAME_SPELL_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SENDER_NAME_SPELL_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_WB {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_HIT_COMM.SENDER_NAME_WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_HIT_COMM”中列“SENDER_NAME_WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.SENDER_NAME_WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_OOS {
                get {
                    return ((string)(this[this.tableHC_ORD_HIT_COMM.IS_OOSColumn]));
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.IS_OOSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StateName {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_HIT_COMM.StateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_HIT_COMM”中列“StateName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_HIT_COMM.StateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_PRODUCT_IDNull() {
                return this.IsNull(this.tableHC_ORD_HIT_COMM.DATA_PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_PRODUCT_IDNull() {
                this[this.tableHC_ORD_HIT_COMM.DATA_PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDER_IDNull() {
                return this.IsNull(this.tableHC_ORD_HIT_COMM.SENDER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDER_IDNull() {
                this[this.tableHC_ORD_HIT_COMM.SENDER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROJECT_TYPE_NameNull() {
                return this.IsNull(this.tableHC_ORD_HIT_COMM.PROJECT_TYPE_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROJECT_TYPE_NameNull() {
                this[this.tableHC_ORD_HIT_COMM.PROJECT_TYPE_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANU_NAME_WBNull() {
                return this.IsNull(this.tableHC_ORD_HIT_COMM.MANU_NAME_WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANU_NAME_WBNull() {
                this[this.tableHC_ORD_HIT_COMM.MANU_NAME_WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALER_NAME_WBNull() {
                return this.IsNull(this.tableHC_ORD_HIT_COMM.SALER_NAME_WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALER_NAME_WBNull() {
                this[this.tableHC_ORD_HIT_COMM.SALER_NAME_WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDER_NAME_WBNull() {
                return this.IsNull(this.tableHC_ORD_HIT_COMM.SENDER_NAME_WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDER_NAME_WBNull() {
                this[this.tableHC_ORD_HIT_COMM.SENDER_NAME_WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNameNull() {
                return this.IsNull(this.tableHC_ORD_HIT_COMM.StateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNameNull() {
                this[this.tableHC_ORD_HIT_COMM.StateNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HC_ORD_HIT_COMMRowChangeEvent : global::System.EventArgs {
            
            private HC_ORD_HIT_COMMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_HIT_COMMRowChangeEvent(HC_ORD_HIT_COMMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_HIT_COMMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData.OOSQueryDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HC_ORD_HIT_COMMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HC_ORD_HIT_COMMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HC_ORD_HIT_COMM";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PROJECT_ID", "PROJECT_ID");
            tableMapping.ColumnMappings.Add("DATA_PRODUCT_ID", "DATA_PRODUCT_ID");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("COMMERCE_NAME", "COMMERCE_NAME");
            tableMapping.ColumnMappings.Add("COMMON_NAME", "COMMON_NAME");
            tableMapping.ColumnMappings.Add("BRAND", "BRAND");
            tableMapping.ColumnMappings.Add("MODEL", "MODEL");
            tableMapping.ColumnMappings.Add("SPEC", "SPEC");
            tableMapping.ColumnMappings.Add("PRICE", "PRICE");
            tableMapping.ColumnMappings.Add("MANU_ID", "MANU_ID");
            tableMapping.ColumnMappings.Add("MANU_NAME", "MANU_NAME");
            tableMapping.ColumnMappings.Add("MANU_NAME_ABBR", "MANU_NAME_ABBR");
            tableMapping.ColumnMappings.Add("SALER_ID", "SALER_ID");
            tableMapping.ColumnMappings.Add("SALER_NAME", "SALER_NAME");
            tableMapping.ColumnMappings.Add("SALER_NAME_ABBR", "SALER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("DEFAULT_MEASURE", "DEFAULT_MEASURE");
            tableMapping.ColumnMappings.Add("SENDER_ID", "SENDER_ID");
            tableMapping.ColumnMappings.Add("SENDER_NAME", "SENDER_NAME");
            tableMapping.ColumnMappings.Add("SENDER_NAME_ABBR", "SENDER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("STATE", "STATE");
            tableMapping.ColumnMappings.Add("PROJECT_TYPE", "PROJECT_TYPE");
            tableMapping.ColumnMappings.Add("PROJECT_TYPE_Name", "PROJECT_TYPE_Name");
            tableMapping.ColumnMappings.Add("CLASS_ID", "CLASS_ID");
            tableMapping.ColumnMappings.Add("MANU_NAME_SPELL_ABBR", "MANU_NAME_SPELL_ABBR");
            tableMapping.ColumnMappings.Add("MANU_NAME_WB", "MANU_NAME_WB");
            tableMapping.ColumnMappings.Add("SALER_NAME_SPELL_ABBR", "SALER_NAME_SPELL_ABBR");
            tableMapping.ColumnMappings.Add("SALER_NAME_WB", "SALER_NAME_WB");
            tableMapping.ColumnMappings.Add("SENDER_NAME_SPELL_ABBR", "SENDER_NAME_SPELL_ABBR");
            tableMapping.ColumnMappings.Add("SENDER_NAME_WB", "SENDER_NAME_WB");
            tableMapping.ColumnMappings.Add("IS_OOS", "IS_OOS");
            tableMapping.ColumnMappings.Add("StateName", "StateName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Emedchina.TradeAssistant.Client.Properties.Settings.Default.TradeAssistantConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Select\r\n                            ohc.ID,\r\n                            ohc.MANU" +
                "_ID,\r\n                            ohc.SALER_ID,\r\n                            ohc" +
                ".SENDER_ID,\r\n                            pro.ID As PROJECT_ID,\r\n                " +
                "            pro.PROJECT_TYPE,\r\n                            (case pro.PROJECT_TYP" +
                "E when \'1\' then \'招投标\' when \'2\' then \'备案采购\' when \'3\' then \'竞价采购\' when \'4\' then \'浏" +
                "览采购\' end) As PROJECT_TYPE_Name,\r\n                            ppcc.CLASS_ID,\r\n   " +
                "                         op.DATA_PRODUCT_ID,\r\n                            op.COM" +
                "MERCE_NAME,\r\n                            op.PRODUCT_NAME,\r\n                     " +
                "       op.COMMON_NAME,\r\n                            ohc.SPEC,\r\n                 " +
                "           ohc.MODEL,\r\n                            ohc.BRAND,\r\n                 " +
                "           org1.ORG_NAME As MANU_NAME,\r\n                            org1.ORG_ABB" +
                "R As MANU_NAME_ABBR,\r\n                            org1.SPELL_ABBR As MANU_NAME_S" +
                "PELL_ABBR,\r\n                            org1.ORG_NAME_WB As MANU_NAME_WB,\r\n     " +
                "                       org2.ORG_NAME As SALER_NAME,\r\n                           " +
                " org2.ORG_ABBR As SALER_NAME_ABBR,\r\n                            org2.SPELL_ABBR " +
                "As SALER_NAME_SPELL_ABBR,\r\n                            org2.ORG_NAME_WB As SALER" +
                "_NAME_WB,\r\n                            org3.ORG_NAME As SENDER_NAME,\r\n          " +
                "                  org3.ORG_ABBR As SENDER_NAME_ABBR,\r\n                          " +
                "  org3.SPELL_ABBR As SENDER_NAME_SPELL_ABBR,\r\n                            org3.O" +
                "RG_NAME_WB As SENDER_NAME_WB,\r\n                            ohc.DEFAULT_MEASURE,\r" +
                "\n                            ohc.PRICE,\r\n                            op.STATE,\r\n" +
                "                            obs.IS_OOS,\r\n                            (case op.ST" +
                "ATE when \'0\' then \'不可用\' when \'1\' then \'可用\' end) As StateName \r\n                 " +
                "           From HC_ORD_HIT_COMM ohc,HC_ORD_PROJECT pro,HC_PROJECT_PROD_CLASS_CON" +
                "TENT ppcc,HC_ORD_PRODUCT op,HC_ORD_BUYER_SENDER obs,HC_ORG org1,HC_ORG org2,HC_O" +
                "RG org3\r\n                            Where ohc.PROJECT_PROD_ID=op.Id And pro.Id " +
                "= op.PROJECT_ID And  ppcc.PROJECT_ID=op.PROJECT_ID And ppcc.PRODUCT_ID=op.ID And" +
                " op.ID=obs.PROJECT_PROD_ID\r\n                            And obs.PROJECT_ID=op.PR" +
                "OJECT_ID And ohc.MANU_ID=org1.ID And ohc.SALER_ID=org2.ID And ohc.SENDER_ID =org" +
                "3.Id\r\n                            And op.STATE=\'1\'";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(OOSQueryDataSet.HC_ORD_HIT_COMMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual OOSQueryDataSet.HC_ORD_HIT_COMMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            OOSQueryDataSet.HC_ORD_HIT_COMMDataTable dataTable = new OOSQueryDataSet.HC_ORD_HIT_COMMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591
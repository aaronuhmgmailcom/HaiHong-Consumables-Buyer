//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("StockGoodDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class StockGoodDataSet : global::System.Data.DataSet {
        
        private HC_ORD_ORD_STOCK_ITEMDataTable tableHC_ORD_ORD_STOCK_ITEM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockGoodDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected StockGoodDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HC_ORD_ORD_STOCK_ITEM"] != null)) {
                    base.Tables.Add(new HC_ORD_ORD_STOCK_ITEMDataTable(ds.Tables["HC_ORD_ORD_STOCK_ITEM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HC_ORD_ORD_STOCK_ITEMDataTable HC_ORD_ORD_STOCK_ITEM {
            get {
                return this.tableHC_ORD_ORD_STOCK_ITEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            StockGoodDataSet cln = ((StockGoodDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HC_ORD_ORD_STOCK_ITEM"] != null)) {
                    base.Tables.Add(new HC_ORD_ORD_STOCK_ITEMDataTable(ds.Tables["HC_ORD_ORD_STOCK_ITEM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHC_ORD_ORD_STOCK_ITEM = ((HC_ORD_ORD_STOCK_ITEMDataTable)(base.Tables["HC_ORD_ORD_STOCK_ITEM"]));
            if ((initTable == true)) {
                if ((this.tableHC_ORD_ORD_STOCK_ITEM != null)) {
                    this.tableHC_ORD_ORD_STOCK_ITEM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "StockGoodDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/StockGoodDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHC_ORD_ORD_STOCK_ITEM = new HC_ORD_ORD_STOCK_ITEMDataTable();
            base.Tables.Add(this.tableHC_ORD_ORD_STOCK_ITEM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHC_ORD_ORD_STOCK_ITEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            StockGoodDataSet ds = new StockGoodDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HC_ORD_ORD_STOCK_ITEMRowChangeEventHandler(object sender, HC_ORD_ORD_STOCK_ITEMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HC_ORD_ORD_STOCK_ITEMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnDATA_PRODUCT_ID;
            
            private global::System.Data.DataColumn columnPROJECT_ID;
            
            private global::System.Data.DataColumn columnPROJECT_PROD_ID;
            
            private global::System.Data.DataColumn columnCOMMON_NAME;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnBRAND;
            
            private global::System.Data.DataColumn columnSPEC_ID;
            
            private global::System.Data.DataColumn columnMODEL_ID;
            
            private global::System.Data.DataColumn columnSPEC;
            
            private global::System.Data.DataColumn columnMODEL;
            
            private global::System.Data.DataColumn columnGOODS_NO;
            
            private global::System.Data.DataColumn columnBARCODE;
            
            private global::System.Data.DataColumn columnBATCH_NO;
            
            private global::System.Data.DataColumn columnVALID_DATE;
            
            private global::System.Data.DataColumn columnNUM;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnPBNO;
            
            private global::System.Data.DataColumn columnSEND_BATCH_NO;
            
            private global::System.Data.DataColumn columnINSTORE_BATCH_NO;
            
            private global::System.Data.DataColumn columnSel;
            
            private global::System.Data.DataColumn columnCONT_PRODUCT_ID;
            
            private global::System.Data.DataColumn columnCOMMERCE_NAME;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnABBR_PY;
            
            private global::System.Data.DataColumn columnABBR_WB;
            
            private global::System.Data.DataColumn columnBASE_MEASURE;
            
            private global::System.Data.DataColumn columnBASE_MEASURE_SPEC;
            
            private global::System.Data.DataColumn columnBASE_MEASURE_MATER;
            
            private global::System.Data.DataColumn columnMAX_PRICE;
            
            private global::System.Data.DataColumn columnSENDER_ID;
            
            private global::System.Data.DataColumn columnSENDER_NAME;
            
            private global::System.Data.DataColumn columnSENDER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnSENDER_NAME_SPELL_ABBR;
            
            private global::System.Data.DataColumn columnSENDER_NAME_WB;
            
            private global::System.Data.DataColumn columnSALER_ID;
            
            private global::System.Data.DataColumn columnSALER_NAME;
            
            private global::System.Data.DataColumn columnSALER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnSALER_NAME_SPELL_ABBR;
            
            private global::System.Data.DataColumn columnSALER_NAME_WB;
            
            private global::System.Data.DataColumn columnMANU_ID;
            
            private global::System.Data.DataColumn columnMANU_NAME;
            
            private global::System.Data.DataColumn columnMANU_NAME_ABBR;
            
            private global::System.Data.DataColumn columnMANU_NAME_SPELL_ABBR;
            
            private global::System.Data.DataColumn columnMANU_NAME_WB;
            
            private global::System.Data.DataColumn columnPRICE;
            
            private global::System.Data.DataColumn columnFACT_AMOUNT;
            
            private global::System.Data.DataColumn columnDEFAULT_MEASURE;
            
            private global::System.Data.DataColumn columnDEFAULT_MEASURE_EX;
            
            private global::System.Data.DataColumn columnINSTRU_CODE;
            
            private global::System.Data.DataColumn columnINSTRU_NAME;
            
            private global::System.Data.DataColumn columnBUYER_ID;
            
            private global::System.Data.DataColumn columnSTORE_ROOM_ID;
            
            private global::System.Data.DataColumn columnmanu_name1;
            
            private global::System.Data.DataColumn columnSTORE_ROOM_NAME;
            
            private global::System.Data.DataColumn columnordHitCommId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCK_ITEMDataTable() {
                this.TableName = "HC_ORD_ORD_STOCK_ITEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_ORD_STOCK_ITEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HC_ORD_ORD_STOCK_ITEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_PRODUCT_IDColumn {
                get {
                    return this.columnDATA_PRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_IDColumn {
                get {
                    return this.columnPROJECT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_PROD_IDColumn {
                get {
                    return this.columnPROJECT_PROD_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMON_NAMEColumn {
                get {
                    return this.columnCOMMON_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDColumn {
                get {
                    return this.columnBRAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPEC_IDColumn {
                get {
                    return this.columnSPEC_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODEL_IDColumn {
                get {
                    return this.columnMODEL_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECColumn {
                get {
                    return this.columnSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELColumn {
                get {
                    return this.columnMODEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GOODS_NOColumn {
                get {
                    return this.columnGOODS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BATCH_NOColumn {
                get {
                    return this.columnBATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALID_DATEColumn {
                get {
                    return this.columnVALID_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NUMColumn {
                get {
                    return this.columnNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBNOColumn {
                get {
                    return this.columnPBNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SEND_BATCH_NOColumn {
                get {
                    return this.columnSEND_BATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSTORE_BATCH_NOColumn {
                get {
                    return this.columnINSTORE_BATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelColumn {
                get {
                    return this.columnSel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONT_PRODUCT_IDColumn {
                get {
                    return this.columnCONT_PRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMERCE_NAMEColumn {
                get {
                    return this.columnCOMMERCE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABBR_PYColumn {
                get {
                    return this.columnABBR_PY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ABBR_WBColumn {
                get {
                    return this.columnABBR_WB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_MEASUREColumn {
                get {
                    return this.columnBASE_MEASURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_MEASURE_SPECColumn {
                get {
                    return this.columnBASE_MEASURE_SPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_MEASURE_MATERColumn {
                get {
                    return this.columnBASE_MEASURE_MATER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAX_PRICEColumn {
                get {
                    return this.columnMAX_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_IDColumn {
                get {
                    return this.columnSENDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAMEColumn {
                get {
                    return this.columnSENDER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_ABBRColumn {
                get {
                    return this.columnSENDER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_SPELL_ABBRColumn {
                get {
                    return this.columnSENDER_NAME_SPELL_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_WBColumn {
                get {
                    return this.columnSENDER_NAME_WB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_IDColumn {
                get {
                    return this.columnSALER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAMEColumn {
                get {
                    return this.columnSALER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_ABBRColumn {
                get {
                    return this.columnSALER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_SPELL_ABBRColumn {
                get {
                    return this.columnSALER_NAME_SPELL_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_WBColumn {
                get {
                    return this.columnSALER_NAME_WB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_IDColumn {
                get {
                    return this.columnMANU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAMEColumn {
                get {
                    return this.columnMANU_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAME_ABBRColumn {
                get {
                    return this.columnMANU_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAME_SPELL_ABBRColumn {
                get {
                    return this.columnMANU_NAME_SPELL_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAME_WBColumn {
                get {
                    return this.columnMANU_NAME_WB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FACT_AMOUNTColumn {
                get {
                    return this.columnFACT_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_MEASUREColumn {
                get {
                    return this.columnDEFAULT_MEASURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_MEASURE_EXColumn {
                get {
                    return this.columnDEFAULT_MEASURE_EX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSTRU_CODEColumn {
                get {
                    return this.columnINSTRU_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INSTRU_NAMEColumn {
                get {
                    return this.columnINSTRU_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BUYER_IDColumn {
                get {
                    return this.columnBUYER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_ROOM_IDColumn {
                get {
                    return this.columnSTORE_ROOM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn manu_name1Column {
                get {
                    return this.columnmanu_name1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_ROOM_NAMEColumn {
                get {
                    return this.columnSTORE_ROOM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ordHitCommIdColumn {
                get {
                    return this.columnordHitCommId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCK_ITEMRow this[int index] {
                get {
                    return ((HC_ORD_ORD_STOCK_ITEMRow)(this.Rows[index]));
                }
            }
            
            public event HC_ORD_ORD_STOCK_ITEMRowChangeEventHandler HC_ORD_ORD_STOCK_ITEMRowChanging;
            
            public event HC_ORD_ORD_STOCK_ITEMRowChangeEventHandler HC_ORD_ORD_STOCK_ITEMRowChanged;
            
            public event HC_ORD_ORD_STOCK_ITEMRowChangeEventHandler HC_ORD_ORD_STOCK_ITEMRowDeleting;
            
            public event HC_ORD_ORD_STOCK_ITEMRowChangeEventHandler HC_ORD_ORD_STOCK_ITEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHC_ORD_ORD_STOCK_ITEMRow(HC_ORD_ORD_STOCK_ITEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCK_ITEMRow AddHC_ORD_ORD_STOCK_ITEMRow(
                        decimal ID, 
                        decimal DATA_PRODUCT_ID, 
                        decimal PROJECT_ID, 
                        decimal PROJECT_PROD_ID, 
                        string COMMON_NAME, 
                        string PRODUCT_NAME, 
                        string BRAND, 
                        decimal SPEC_ID, 
                        decimal MODEL_ID, 
                        string SPEC, 
                        string MODEL, 
                        string GOODS_NO, 
                        string BARCODE, 
                        string BATCH_NO, 
                        System.DateTime VALID_DATE, 
                        decimal NUM, 
                        System.DateTime CREATE_DATE, 
                        string PBNO, 
                        string SEND_BATCH_NO, 
                        string INSTORE_BATCH_NO, 
                        string Sel, 
                        decimal CONT_PRODUCT_ID, 
                        string COMMERCE_NAME, 
                        string CODE, 
                        string ABBR_PY, 
                        string ABBR_WB, 
                        string BASE_MEASURE, 
                        string BASE_MEASURE_SPEC, 
                        string BASE_MEASURE_MATER, 
                        decimal MAX_PRICE, 
                        decimal SENDER_ID, 
                        string SENDER_NAME, 
                        string SENDER_NAME_ABBR, 
                        string SENDER_NAME_SPELL_ABBR, 
                        string SENDER_NAME_WB, 
                        decimal SALER_ID, 
                        string SALER_NAME, 
                        string SALER_NAME_ABBR, 
                        string SALER_NAME_SPELL_ABBR, 
                        string SALER_NAME_WB, 
                        decimal MANU_ID, 
                        string MANU_NAME, 
                        string MANU_NAME_ABBR, 
                        string MANU_NAME_SPELL_ABBR, 
                        string MANU_NAME_WB, 
                        decimal PRICE, 
                        string FACT_AMOUNT, 
                        string DEFAULT_MEASURE, 
                        decimal DEFAULT_MEASURE_EX, 
                        string INSTRU_CODE, 
                        string INSTRU_NAME, 
                        decimal BUYER_ID, 
                        decimal STORE_ROOM_ID, 
                        string manu_name1, 
                        string STORE_ROOM_NAME, 
                        decimal ordHitCommId) {
                HC_ORD_ORD_STOCK_ITEMRow rowHC_ORD_ORD_STOCK_ITEMRow = ((HC_ORD_ORD_STOCK_ITEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        DATA_PRODUCT_ID,
                        PROJECT_ID,
                        PROJECT_PROD_ID,
                        COMMON_NAME,
                        PRODUCT_NAME,
                        BRAND,
                        SPEC_ID,
                        MODEL_ID,
                        SPEC,
                        MODEL,
                        GOODS_NO,
                        BARCODE,
                        BATCH_NO,
                        VALID_DATE,
                        NUM,
                        CREATE_DATE,
                        PBNO,
                        SEND_BATCH_NO,
                        INSTORE_BATCH_NO,
                        Sel,
                        CONT_PRODUCT_ID,
                        COMMERCE_NAME,
                        CODE,
                        ABBR_PY,
                        ABBR_WB,
                        BASE_MEASURE,
                        BASE_MEASURE_SPEC,
                        BASE_MEASURE_MATER,
                        MAX_PRICE,
                        SENDER_ID,
                        SENDER_NAME,
                        SENDER_NAME_ABBR,
                        SENDER_NAME_SPELL_ABBR,
                        SENDER_NAME_WB,
                        SALER_ID,
                        SALER_NAME,
                        SALER_NAME_ABBR,
                        SALER_NAME_SPELL_ABBR,
                        SALER_NAME_WB,
                        MANU_ID,
                        MANU_NAME,
                        MANU_NAME_ABBR,
                        MANU_NAME_SPELL_ABBR,
                        MANU_NAME_WB,
                        PRICE,
                        FACT_AMOUNT,
                        DEFAULT_MEASURE,
                        DEFAULT_MEASURE_EX,
                        INSTRU_CODE,
                        INSTRU_NAME,
                        BUYER_ID,
                        STORE_ROOM_ID,
                        manu_name1,
                        STORE_ROOM_NAME,
                        ordHitCommId};
                rowHC_ORD_ORD_STOCK_ITEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHC_ORD_ORD_STOCK_ITEMRow);
                return rowHC_ORD_ORD_STOCK_ITEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCK_ITEMRow FindByID(decimal ID) {
                return ((HC_ORD_ORD_STOCK_ITEMRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HC_ORD_ORD_STOCK_ITEMDataTable cln = ((HC_ORD_ORD_STOCK_ITEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HC_ORD_ORD_STOCK_ITEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnDATA_PRODUCT_ID = base.Columns["DATA_PRODUCT_ID"];
                this.columnPROJECT_ID = base.Columns["PROJECT_ID"];
                this.columnPROJECT_PROD_ID = base.Columns["PROJECT_PROD_ID"];
                this.columnCOMMON_NAME = base.Columns["COMMON_NAME"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnBRAND = base.Columns["BRAND"];
                this.columnSPEC_ID = base.Columns["SPEC_ID"];
                this.columnMODEL_ID = base.Columns["MODEL_ID"];
                this.columnSPEC = base.Columns["SPEC"];
                this.columnMODEL = base.Columns["MODEL"];
                this.columnGOODS_NO = base.Columns["GOODS_NO"];
                this.columnBARCODE = base.Columns["BARCODE"];
                this.columnBATCH_NO = base.Columns["BATCH_NO"];
                this.columnVALID_DATE = base.Columns["VALID_DATE"];
                this.columnNUM = base.Columns["NUM"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnPBNO = base.Columns["PBNO"];
                this.columnSEND_BATCH_NO = base.Columns["SEND_BATCH_NO"];
                this.columnINSTORE_BATCH_NO = base.Columns["INSTORE_BATCH_NO"];
                this.columnSel = base.Columns["Sel"];
                this.columnCONT_PRODUCT_ID = base.Columns["CONT_PRODUCT_ID"];
                this.columnCOMMERCE_NAME = base.Columns["COMMERCE_NAME"];
                this.columnCODE = base.Columns["CODE"];
                this.columnABBR_PY = base.Columns["ABBR_PY"];
                this.columnABBR_WB = base.Columns["ABBR_WB"];
                this.columnBASE_MEASURE = base.Columns["BASE_MEASURE"];
                this.columnBASE_MEASURE_SPEC = base.Columns["BASE_MEASURE_SPEC"];
                this.columnBASE_MEASURE_MATER = base.Columns["BASE_MEASURE_MATER"];
                this.columnMAX_PRICE = base.Columns["MAX_PRICE"];
                this.columnSENDER_ID = base.Columns["SENDER_ID"];
                this.columnSENDER_NAME = base.Columns["SENDER_NAME"];
                this.columnSENDER_NAME_ABBR = base.Columns["SENDER_NAME_ABBR"];
                this.columnSENDER_NAME_SPELL_ABBR = base.Columns["SENDER_NAME_SPELL_ABBR"];
                this.columnSENDER_NAME_WB = base.Columns["SENDER_NAME_WB"];
                this.columnSALER_ID = base.Columns["SALER_ID"];
                this.columnSALER_NAME = base.Columns["SALER_NAME"];
                this.columnSALER_NAME_ABBR = base.Columns["SALER_NAME_ABBR"];
                this.columnSALER_NAME_SPELL_ABBR = base.Columns["SALER_NAME_SPELL_ABBR"];
                this.columnSALER_NAME_WB = base.Columns["SALER_NAME_WB"];
                this.columnMANU_ID = base.Columns["MANU_ID"];
                this.columnMANU_NAME = base.Columns["MANU_NAME"];
                this.columnMANU_NAME_ABBR = base.Columns["MANU_NAME_ABBR"];
                this.columnMANU_NAME_SPELL_ABBR = base.Columns["MANU_NAME_SPELL_ABBR"];
                this.columnMANU_NAME_WB = base.Columns["MANU_NAME_WB"];
                this.columnPRICE = base.Columns["PRICE"];
                this.columnFACT_AMOUNT = base.Columns["FACT_AMOUNT"];
                this.columnDEFAULT_MEASURE = base.Columns["DEFAULT_MEASURE"];
                this.columnDEFAULT_MEASURE_EX = base.Columns["DEFAULT_MEASURE_EX"];
                this.columnINSTRU_CODE = base.Columns["INSTRU_CODE"];
                this.columnINSTRU_NAME = base.Columns["INSTRU_NAME"];
                this.columnBUYER_ID = base.Columns["BUYER_ID"];
                this.columnSTORE_ROOM_ID = base.Columns["STORE_ROOM_ID"];
                this.columnmanu_name1 = base.Columns["manu_name1"];
                this.columnSTORE_ROOM_NAME = base.Columns["STORE_ROOM_NAME"];
                this.columnordHitCommId = base.Columns["ordHitCommId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnDATA_PRODUCT_ID = new global::System.Data.DataColumn("DATA_PRODUCT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_PRODUCT_ID);
                this.columnPROJECT_ID = new global::System.Data.DataColumn("PROJECT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_ID);
                this.columnPROJECT_PROD_ID = new global::System.Data.DataColumn("PROJECT_PROD_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_PROD_ID);
                this.columnCOMMON_NAME = new global::System.Data.DataColumn("COMMON_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMON_NAME);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnBRAND = new global::System.Data.DataColumn("BRAND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRAND);
                this.columnSPEC_ID = new global::System.Data.DataColumn("SPEC_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEC_ID);
                this.columnMODEL_ID = new global::System.Data.DataColumn("MODEL_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL_ID);
                this.columnSPEC = new global::System.Data.DataColumn("SPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEC);
                this.columnMODEL = new global::System.Data.DataColumn("MODEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL);
                this.columnGOODS_NO = new global::System.Data.DataColumn("GOODS_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOODS_NO);
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.columnBATCH_NO = new global::System.Data.DataColumn("BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH_NO);
                this.columnVALID_DATE = new global::System.Data.DataColumn("VALID_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALID_DATE);
                this.columnNUM = new global::System.Data.DataColumn("NUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNUM);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnPBNO = new global::System.Data.DataColumn("PBNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBNO);
                this.columnSEND_BATCH_NO = new global::System.Data.DataColumn("SEND_BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEND_BATCH_NO);
                this.columnINSTORE_BATCH_NO = new global::System.Data.DataColumn("INSTORE_BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTORE_BATCH_NO);
                this.columnSel = new global::System.Data.DataColumn("Sel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSel);
                this.columnCONT_PRODUCT_ID = new global::System.Data.DataColumn("CONT_PRODUCT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONT_PRODUCT_ID);
                this.columnCOMMERCE_NAME = new global::System.Data.DataColumn("COMMERCE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMERCE_NAME);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnABBR_PY = new global::System.Data.DataColumn("ABBR_PY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABBR_PY);
                this.columnABBR_WB = new global::System.Data.DataColumn("ABBR_WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABBR_WB);
                this.columnBASE_MEASURE = new global::System.Data.DataColumn("BASE_MEASURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_MEASURE);
                this.columnBASE_MEASURE_SPEC = new global::System.Data.DataColumn("BASE_MEASURE_SPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_MEASURE_SPEC);
                this.columnBASE_MEASURE_MATER = new global::System.Data.DataColumn("BASE_MEASURE_MATER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_MEASURE_MATER);
                this.columnMAX_PRICE = new global::System.Data.DataColumn("MAX_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_PRICE);
                this.columnSENDER_ID = new global::System.Data.DataColumn("SENDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_ID);
                this.columnSENDER_NAME = new global::System.Data.DataColumn("SENDER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME);
                this.columnSENDER_NAME_ABBR = new global::System.Data.DataColumn("SENDER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_ABBR);
                this.columnSENDER_NAME_SPELL_ABBR = new global::System.Data.DataColumn("SENDER_NAME_SPELL_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_SPELL_ABBR);
                this.columnSENDER_NAME_WB = new global::System.Data.DataColumn("SENDER_NAME_WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_WB);
                this.columnSALER_ID = new global::System.Data.DataColumn("SALER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_ID);
                this.columnSALER_NAME = new global::System.Data.DataColumn("SALER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME);
                this.columnSALER_NAME_ABBR = new global::System.Data.DataColumn("SALER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_ABBR);
                this.columnSALER_NAME_SPELL_ABBR = new global::System.Data.DataColumn("SALER_NAME_SPELL_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_SPELL_ABBR);
                this.columnSALER_NAME_WB = new global::System.Data.DataColumn("SALER_NAME_WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_WB);
                this.columnMANU_ID = new global::System.Data.DataColumn("MANU_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_ID);
                this.columnMANU_NAME = new global::System.Data.DataColumn("MANU_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME);
                this.columnMANU_NAME_ABBR = new global::System.Data.DataColumn("MANU_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME_ABBR);
                this.columnMANU_NAME_SPELL_ABBR = new global::System.Data.DataColumn("MANU_NAME_SPELL_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME_SPELL_ABBR);
                this.columnMANU_NAME_WB = new global::System.Data.DataColumn("MANU_NAME_WB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME_WB);
                this.columnPRICE = new global::System.Data.DataColumn("PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columnFACT_AMOUNT = new global::System.Data.DataColumn("FACT_AMOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACT_AMOUNT);
                this.columnDEFAULT_MEASURE = new global::System.Data.DataColumn("DEFAULT_MEASURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_MEASURE);
                this.columnDEFAULT_MEASURE_EX = new global::System.Data.DataColumn("DEFAULT_MEASURE_EX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_MEASURE_EX);
                this.columnINSTRU_CODE = new global::System.Data.DataColumn("INSTRU_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTRU_CODE);
                this.columnINSTRU_NAME = new global::System.Data.DataColumn("INSTRU_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTRU_NAME);
                this.columnBUYER_ID = new global::System.Data.DataColumn("BUYER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBUYER_ID);
                this.columnSTORE_ROOM_ID = new global::System.Data.DataColumn("STORE_ROOM_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_ROOM_ID);
                this.columnmanu_name1 = new global::System.Data.DataColumn("manu_name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanu_name1);
                this.columnSTORE_ROOM_NAME = new global::System.Data.DataColumn("STORE_ROOM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_ROOM_NAME);
                this.columnordHitCommId = new global::System.Data.DataColumn("ordHitCommId", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnordHitCommId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnPROJECT_ID.AllowDBNull = false;
                this.columnPROJECT_PROD_ID.AllowDBNull = false;
                this.columnCOMMON_NAME.AllowDBNull = false;
                this.columnCOMMON_NAME.MaxLength = 100;
                this.columnPRODUCT_NAME.AllowDBNull = false;
                this.columnPRODUCT_NAME.MaxLength = 100;
                this.columnBRAND.AllowDBNull = false;
                this.columnBRAND.MaxLength = 50;
                this.columnSPEC_ID.AllowDBNull = false;
                this.columnMODEL_ID.AllowDBNull = false;
                this.columnSPEC.AllowDBNull = false;
                this.columnSPEC.MaxLength = 4000;
                this.columnMODEL.AllowDBNull = false;
                this.columnMODEL.MaxLength = 3000;
                this.columnGOODS_NO.MaxLength = 100;
                this.columnBARCODE.MaxLength = 50;
                this.columnBATCH_NO.MaxLength = 128;
                this.columnNUM.AllowDBNull = false;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnPBNO.MaxLength = 50;
                this.columnSEND_BATCH_NO.MaxLength = 50;
                this.columnINSTORE_BATCH_NO.MaxLength = 50;
                this.columnSel.ReadOnly = true;
                this.columnSel.MaxLength = 1;
                this.columnCOMMERCE_NAME.AllowDBNull = false;
                this.columnCOMMERCE_NAME.MaxLength = 100;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 100;
                this.columnABBR_PY.MaxLength = 50;
                this.columnABBR_WB.MaxLength = 50;
                this.columnBASE_MEASURE.MaxLength = 50;
                this.columnBASE_MEASURE_SPEC.MaxLength = 100;
                this.columnBASE_MEASURE_MATER.MaxLength = 100;
                this.columnSENDER_ID.AllowDBNull = false;
                this.columnSENDER_NAME.AllowDBNull = false;
                this.columnSENDER_NAME.MaxLength = 150;
                this.columnSENDER_NAME_ABBR.MaxLength = 150;
                this.columnSENDER_NAME_SPELL_ABBR.MaxLength = 50;
                this.columnSENDER_NAME_WB.MaxLength = 50;
                this.columnSALER_ID.AllowDBNull = false;
                this.columnSALER_NAME.AllowDBNull = false;
                this.columnSALER_NAME.MaxLength = 150;
                this.columnSALER_NAME_ABBR.MaxLength = 150;
                this.columnSALER_NAME_SPELL_ABBR.MaxLength = 50;
                this.columnSALER_NAME_WB.MaxLength = 50;
                this.columnMANU_ID.AllowDBNull = false;
                this.columnMANU_NAME.AllowDBNull = false;
                this.columnMANU_NAME.MaxLength = 150;
                this.columnMANU_NAME_ABBR.MaxLength = 150;
                this.columnMANU_NAME_SPELL_ABBR.MaxLength = 50;
                this.columnMANU_NAME_WB.MaxLength = 50;
                this.columnFACT_AMOUNT.ReadOnly = true;
                this.columnFACT_AMOUNT.MaxLength = 1;
                this.columnDEFAULT_MEASURE.MaxLength = 50;
                this.columnINSTRU_CODE.AllowDBNull = false;
                this.columnINSTRU_CODE.MaxLength = 50;
                this.columnINSTRU_NAME.AllowDBNull = false;
                this.columnINSTRU_NAME.MaxLength = 100;
                this.columnBUYER_ID.AllowDBNull = false;
                this.columnmanu_name1.MaxLength = 100;
                this.columnSTORE_ROOM_NAME.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCK_ITEMRow NewHC_ORD_ORD_STOCK_ITEMRow() {
                return ((HC_ORD_ORD_STOCK_ITEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HC_ORD_ORD_STOCK_ITEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HC_ORD_ORD_STOCK_ITEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HC_ORD_ORD_STOCK_ITEMRowChanged != null)) {
                    this.HC_ORD_ORD_STOCK_ITEMRowChanged(this, new HC_ORD_ORD_STOCK_ITEMRowChangeEvent(((HC_ORD_ORD_STOCK_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HC_ORD_ORD_STOCK_ITEMRowChanging != null)) {
                    this.HC_ORD_ORD_STOCK_ITEMRowChanging(this, new HC_ORD_ORD_STOCK_ITEMRowChangeEvent(((HC_ORD_ORD_STOCK_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HC_ORD_ORD_STOCK_ITEMRowDeleted != null)) {
                    this.HC_ORD_ORD_STOCK_ITEMRowDeleted(this, new HC_ORD_ORD_STOCK_ITEMRowChangeEvent(((HC_ORD_ORD_STOCK_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HC_ORD_ORD_STOCK_ITEMRowDeleting != null)) {
                    this.HC_ORD_ORD_STOCK_ITEMRowDeleting(this, new HC_ORD_ORD_STOCK_ITEMRowChangeEvent(((HC_ORD_ORD_STOCK_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHC_ORD_ORD_STOCK_ITEMRow(HC_ORD_ORD_STOCK_ITEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                StockGoodDataSet ds = new StockGoodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HC_ORD_ORD_STOCK_ITEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HC_ORD_ORD_STOCK_ITEMRow : global::System.Data.DataRow {
            
            private HC_ORD_ORD_STOCK_ITEMDataTable tableHC_ORD_ORD_STOCK_ITEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_ORD_STOCK_ITEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHC_ORD_ORD_STOCK_ITEM = ((HC_ORD_ORD_STOCK_ITEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DATA_PRODUCT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.DATA_PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“DATA_PRODUCT_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.DATA_PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROJECT_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.PROJECT_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.PROJECT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROJECT_PROD_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.PROJECT_PROD_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.PROJECT_PROD_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMON_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.COMMON_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.COMMON_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.PRODUCT_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRAND {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.BRANDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.BRANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SPEC_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SPEC_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SPEC_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MODEL_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MODEL_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MODEL_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPEC {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SPECColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODEL {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MODELColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MODELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GOODS_NO {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.GOODS_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“GOODS_NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.GOODS_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“BARCODE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BATCH_NO {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.BATCH_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“BATCH_NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VALID_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHC_ORD_ORD_STOCK_ITEM.VALID_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“VALID_DATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.VALID_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NUM {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.NUMColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableHC_ORD_ORD_STOCK_ITEM.CREATE_DATEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PBNO {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.PBNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“PBNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.PBNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SEND_BATCH_NO {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SEND_BATCH_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“SEND_BATCH_NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SEND_BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSTORE_BATCH_NO {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.INSTORE_BATCH_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“INSTORE_BATCH_NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.INSTORE_BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sel {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“Sel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONT_PRODUCT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.CONT_PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“CONT_PRODUCT_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.CONT_PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMERCE_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.COMMERCE_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.COMMERCE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODE {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.CODEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ABBR_PY {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_PYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“ABBR_PY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_PYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ABBR_WB {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“ABBR_WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BASE_MEASURE {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“BASE_MEASURE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BASE_MEASURE_SPEC {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_SPECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“BASE_MEASURE_SPEC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_SPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BASE_MEASURE_MATER {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_MATERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“BASE_MEASURE_MATER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_MATERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MAX_PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MAX_PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“MAX_PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MAX_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SENDER_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_ABBR {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_ABBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“SENDER_NAME_ABBR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_SPELL_ABBR {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_SPELL_ABBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“SENDER_NAME_SPELL_ABBR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_SPELL_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_WB {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“SENDER_NAME_WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALER_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_ABBR {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_ABBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“SALER_NAME_ABBR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_SPELL_ABBR {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_SPELL_ABBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“SALER_NAME_SPELL_ABBR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_SPELL_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_WB {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“SALER_NAME_WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MANU_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME_ABBR {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_ABBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“MANU_NAME_ABBR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME_SPELL_ABBR {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_SPELL_ABBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“MANU_NAME_SPELL_ABBR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_SPELL_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME_WB {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_WBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“MANU_NAME_WB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_WBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FACT_AMOUNT {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.FACT_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“FACT_AMOUNT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.FACT_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEFAULT_MEASURE {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“DEFAULT_MEASURE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DEFAULT_MEASURE_EX {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASURE_EXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“DEFAULT_MEASURE_EX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASURE_EXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSTRU_CODE {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.INSTRU_CODEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.INSTRU_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSTRU_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.INSTRU_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.INSTRU_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BUYER_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.BUYER_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.BUYER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal STORE_ROOM_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“STORE_ROOM_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string manu_name1 {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.manu_name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“manu_name1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.manu_name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_ROOM_NAME {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“STORE_ROOM_NAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ordHitCommId {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORD_STOCK_ITEM.ordHitCommIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORD_STOCK_ITEM”中列“ordHitCommId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORD_STOCK_ITEM.ordHitCommIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_PRODUCT_IDNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.DATA_PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_PRODUCT_IDNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.DATA_PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGOODS_NONull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.GOODS_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGOODS_NONull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.GOODS_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBATCH_NONull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.BATCH_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBATCH_NONull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.BATCH_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALID_DATENull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.VALID_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALID_DATENull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.VALID_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBNONull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.PBNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBNONull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.PBNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSEND_BATCH_NONull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SEND_BATCH_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSEND_BATCH_NONull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SEND_BATCH_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSTORE_BATCH_NONull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.INSTORE_BATCH_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSTORE_BATCH_NONull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.INSTORE_BATCH_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONT_PRODUCT_IDNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.CONT_PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONT_PRODUCT_IDNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.CONT_PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABBR_PYNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_PYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABBR_PYNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_PYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsABBR_WBNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetABBR_WBNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.ABBR_WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_MEASURENull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_MEASURENull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_MEASURE_SPECNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_SPECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_MEASURE_SPECNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_SPECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_MEASURE_MATERNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_MATERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_MEASURE_MATERNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.BASE_MEASURE_MATERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAX_PRICENull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.MAX_PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAX_PRICENull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.MAX_PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDER_NAME_ABBRNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_ABBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDER_NAME_ABBRNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_ABBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDER_NAME_SPELL_ABBRNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_SPELL_ABBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDER_NAME_SPELL_ABBRNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_SPELL_ABBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDER_NAME_WBNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDER_NAME_WBNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SENDER_NAME_WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALER_NAME_ABBRNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_ABBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALER_NAME_ABBRNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_ABBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALER_NAME_SPELL_ABBRNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_SPELL_ABBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALER_NAME_SPELL_ABBRNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_SPELL_ABBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSALER_NAME_WBNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSALER_NAME_WBNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.SALER_NAME_WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANU_NAME_ABBRNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_ABBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANU_NAME_ABBRNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_ABBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANU_NAME_SPELL_ABBRNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_SPELL_ABBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANU_NAME_SPELL_ABBRNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_SPELL_ABBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMANU_NAME_WBNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_WBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMANU_NAME_WBNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.MANU_NAME_WBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICENull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICENull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFACT_AMOUNTNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.FACT_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFACT_AMOUNTNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.FACT_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_MEASURENull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_MEASURENull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_MEASURE_EXNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASURE_EXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_MEASURE_EXNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.DEFAULT_MEASURE_EXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_ROOM_IDNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_ROOM_IDNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismanu_name1Null() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.manu_name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmanu_name1Null() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.manu_name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_ROOM_NAMENull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_ROOM_NAMENull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.STORE_ROOM_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsordHitCommIdNull() {
                return this.IsNull(this.tableHC_ORD_ORD_STOCK_ITEM.ordHitCommIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetordHitCommIdNull() {
                this[this.tableHC_ORD_ORD_STOCK_ITEM.ordHitCommIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HC_ORD_ORD_STOCK_ITEMRowChangeEvent : global::System.EventArgs {
            
            private HC_ORD_ORD_STOCK_ITEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCK_ITEMRowChangeEvent(HC_ORD_ORD_STOCK_ITEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORD_STOCK_ITEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData.StockGoodDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HC_ORD_ORD_STOCK_ITEMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HC_ORD_ORD_STOCK_ITEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HC_ORD_ORD_STOCK_ITEM";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("DATA_PRODUCT_ID", "DATA_PRODUCT_ID");
            tableMapping.ColumnMappings.Add("PROJECT_ID", "PROJECT_ID");
            tableMapping.ColumnMappings.Add("PROJECT_PROD_ID", "PROJECT_PROD_ID");
            tableMapping.ColumnMappings.Add("COMMON_NAME", "COMMON_NAME");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("BRAND", "BRAND");
            tableMapping.ColumnMappings.Add("SPEC_ID", "SPEC_ID");
            tableMapping.ColumnMappings.Add("MODEL_ID", "MODEL_ID");
            tableMapping.ColumnMappings.Add("SPEC", "SPEC");
            tableMapping.ColumnMappings.Add("MODEL", "MODEL");
            tableMapping.ColumnMappings.Add("GOODS_NO", "GOODS_NO");
            tableMapping.ColumnMappings.Add("BARCODE", "BARCODE");
            tableMapping.ColumnMappings.Add("BATCH_NO", "BATCH_NO");
            tableMapping.ColumnMappings.Add("VALID_DATE", "VALID_DATE");
            tableMapping.ColumnMappings.Add("NUM", "NUM");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("PBNO", "PBNO");
            tableMapping.ColumnMappings.Add("SEND_BATCH_NO", "SEND_BATCH_NO");
            tableMapping.ColumnMappings.Add("INSTORE_BATCH_NO", "INSTORE_BATCH_NO");
            tableMapping.ColumnMappings.Add("Sel", "Sel");
            tableMapping.ColumnMappings.Add("CONT_PRODUCT_ID", "CONT_PRODUCT_ID");
            tableMapping.ColumnMappings.Add("COMMERCE_NAME", "COMMERCE_NAME");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("ABBR_PY", "ABBR_PY");
            tableMapping.ColumnMappings.Add("ABBR_WB", "ABBR_WB");
            tableMapping.ColumnMappings.Add("BASE_MEASURE", "BASE_MEASURE");
            tableMapping.ColumnMappings.Add("BASE_MEASURE_SPEC", "BASE_MEASURE_SPEC");
            tableMapping.ColumnMappings.Add("BASE_MEASURE_MATER", "BASE_MEASURE_MATER");
            tableMapping.ColumnMappings.Add("MAX_PRICE", "MAX_PRICE");
            tableMapping.ColumnMappings.Add("SENDER_ID", "SENDER_ID");
            tableMapping.ColumnMappings.Add("SENDER_NAME", "SENDER_NAME");
            tableMapping.ColumnMappings.Add("SENDER_NAME_ABBR", "SENDER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("SENDER_NAME_SPELL_ABBR", "SENDER_NAME_SPELL_ABBR");
            tableMapping.ColumnMappings.Add("SENDER_NAME_WB", "SENDER_NAME_WB");
            tableMapping.ColumnMappings.Add("SALER_ID", "SALER_ID");
            tableMapping.ColumnMappings.Add("SALER_NAME", "SALER_NAME");
            tableMapping.ColumnMappings.Add("SALER_NAME_ABBR", "SALER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("SALER_NAME_SPELL_ABBR", "SALER_NAME_SPELL_ABBR");
            tableMapping.ColumnMappings.Add("SALER_NAME_WB", "SALER_NAME_WB");
            tableMapping.ColumnMappings.Add("MANU_ID", "MANU_ID");
            tableMapping.ColumnMappings.Add("MANU_NAME", "MANU_NAME");
            tableMapping.ColumnMappings.Add("MANU_NAME_ABBR", "MANU_NAME_ABBR");
            tableMapping.ColumnMappings.Add("MANU_NAME_SPELL_ABBR", "MANU_NAME_SPELL_ABBR");
            tableMapping.ColumnMappings.Add("MANU_NAME_WB", "MANU_NAME_WB");
            tableMapping.ColumnMappings.Add("PRICE", "PRICE");
            tableMapping.ColumnMappings.Add("FACT_AMOUNT", "FACT_AMOUNT");
            tableMapping.ColumnMappings.Add("DEFAULT_MEASURE", "DEFAULT_MEASURE");
            tableMapping.ColumnMappings.Add("DEFAULT_MEASURE_EX", "DEFAULT_MEASURE_EX");
            tableMapping.ColumnMappings.Add("INSTRU_CODE", "INSTRU_CODE");
            tableMapping.ColumnMappings.Add("INSTRU_NAME", "INSTRU_NAME");
            tableMapping.ColumnMappings.Add("BUYER_ID", "BUYER_ID");
            tableMapping.ColumnMappings.Add("STORE_ROOM_ID", "STORE_ROOM_ID");
            tableMapping.ColumnMappings.Add("manu_name1", "manu_name1");
            tableMapping.ColumnMappings.Add("STORE_ROOM_NAME", "STORE_ROOM_NAME");
            tableMapping.ColumnMappings.Add("ordHitCommId", "ordHitCommId");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Emedchina.TradeAssistant.Client.Properties.Settings.Default.TradeAssistantConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Select Tab.*,ohc.STORE_ROOM_ID,ohc.manu_name,\r\n                            ohc.ST" +
                "ORE_ROOM_NAME,ohc.ID As ordHitCommId From\r\n                            (\r\n      " +
                "                      Select \r\n                            \'0\' As Sel,\r\n        " +
                "                    osa.ID,\r\n                            op.id As PROJECT_PROD_I" +
                "D,\r\n                            op.DATA_PRODUCT_ID,\r\n                           " +
                " op.CONT_PRODUCT_ID,\r\n                            op.PROJECT_ID,\r\n              " +
                "              op.COMMERCE_NAME,\r\n                            op.PRODUCT_NAME,\r\n " +
                "                           op.COMMON_NAME,\r\n                            op.CODE," +
                "\r\n                            op.GOODS_NO,\r\n                            op.ABBR_" +
                "PY,\r\n                            op.ABBR_WB,\r\n                            op.BAS" +
                "E_MEASURE,\r\n                            op.BASE_MEASURE_SPEC,\r\n                 " +
                "           op.BASE_MEASURE_MATER,\r\n                            op.MAX_PRICE,\r\n  " +
                "                          osi.SPEC_ID,\r\n                            osi.MODEL_ID" +
                ",\r\n                            osi.SPEC,\r\n                            osi.MODEL," +
                "\r\n                            osi.BRAND,\r\n                            osa.CREATE" +
                "_DATE,\r\n                            org1.ID As SENDER_ID,\r\n                     " +
                "       org1.ORG_NAME As SENDER_NAME,\r\n                            org1.ORG_ABBR " +
                "As SENDER_NAME_ABBR,\r\n                            org1.SPELL_ABBR As SENDER_NAME" +
                "_SPELL_ABBR,\r\n                            org1.ORG_NAME_WB As SENDER_NAME_WB,\r\n " +
                "                           org2.ID As SALER_ID,\r\n                            org" +
                "2.ORG_NAME As SALER_NAME,\r\n                            org2.ORG_ABBR As SALER_NA" +
                "ME_ABBR,\r\n                            org2.SPELL_ABBR As SALER_NAME_SPELL_ABBR,\r" +
                "\n                            org2.ORG_NAME_WB As SALER_NAME_WB,\r\n               " +
                "             org3.ID As MANU_ID,\r\n                            org3.ORG_NAME As M" +
                "ANU_NAME,\r\n                            org3.ORG_ABBR As MANU_NAME_ABBR,\r\n       " +
                "                     org3.SPELL_ABBR As MANU_NAME_SPELL_ABBR,\r\n                 " +
                "           org3.ORG_NAME_WB As MANU_NAME_WB,\r\n                            op.PRI" +
                "CE,\r\n                            \'\' As FACT_AMOUNT,\r\n                           " +
                " op.DEFAULT_MEASURE,\r\n                            op.DEFAULT_MEASURE_EX,\r\n      " +
                "                      op.INSTRU_CODE,\r\n                            op.INSTRU_NAM" +
                "E,\r\n                            osa.BATCH_NO,\r\n                            osa.V" +
                "ALID_DATE,\r\n                            osa.PBNO,\r\n                            o" +
                "sa.SEND_BATCH_NO,\r\n                            osa.INSTORE_BATCH_NO,\r\n          " +
                "                  op.BARCODE,\r\n                            osa.NUM,\r\n           " +
                "                 ost.BUYER_ID\r\n                            From HC_ORD_SECOND_AY" +
                "RLNV osa,HC_ORD_ORD_STOCK_ITEM osi,HC_ORD_ORD_STOCK ost,HC_ORD_PRODUCT op,HC_ORG" +
                " org1,HC_ORG org2,HC_ORG org3\r\n                            where osa.STOCK_ITEM_" +
                "ID=osi.Id and op.id=osa.PROJECT_PRODUCT_ID And osa.state <> \'0\'\r\n               " +
                "             And osa.SENDER_ID=org1.ID And osa.SALER_ID=org2.ID And op.MANU_ID=o" +
                "rg3.ID And ost.id=osi.STOCK_ID\r\n                            ) As Tab Left Join H" +
                "C_ORD_HIT_COMM ohc\r\n                            on Tab.PROJECT_ID=ohc.PROJECT_ID" +
                " and Tab.PROJECT_PROD_ID=ohc.PROJECT_PROD_ID and Tab.SPEC_ID=ohc.SPEC_ID and Tab" +
                ".MODEL_ID=ohc.MODEL_ID ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(StockGoodDataSet.HC_ORD_ORD_STOCK_ITEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual StockGoodDataSet.HC_ORD_ORD_STOCK_ITEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            StockGoodDataSet.HC_ORD_ORD_STOCK_ITEMDataTable dataTable = new StockGoodDataSet.HC_ORD_ORD_STOCK_ITEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591
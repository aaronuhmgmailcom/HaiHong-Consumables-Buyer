//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ConsumeGoodDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ConsumeGoodDataSet : global::System.Data.DataSet {
        
        private HC_ORG_SECOND_AYRLNV_USEDataTable tableHC_ORG_SECOND_AYRLNV_USE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConsumeGoodDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ConsumeGoodDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HC_ORG_SECOND_AYRLNV_USE"] != null)) {
                    base.Tables.Add(new HC_ORG_SECOND_AYRLNV_USEDataTable(ds.Tables["HC_ORG_SECOND_AYRLNV_USE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HC_ORG_SECOND_AYRLNV_USEDataTable HC_ORG_SECOND_AYRLNV_USE {
            get {
                return this.tableHC_ORG_SECOND_AYRLNV_USE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ConsumeGoodDataSet cln = ((ConsumeGoodDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HC_ORG_SECOND_AYRLNV_USE"] != null)) {
                    base.Tables.Add(new HC_ORG_SECOND_AYRLNV_USEDataTable(ds.Tables["HC_ORG_SECOND_AYRLNV_USE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHC_ORG_SECOND_AYRLNV_USE = ((HC_ORG_SECOND_AYRLNV_USEDataTable)(base.Tables["HC_ORG_SECOND_AYRLNV_USE"]));
            if ((initTable == true)) {
                if ((this.tableHC_ORG_SECOND_AYRLNV_USE != null)) {
                    this.tableHC_ORG_SECOND_AYRLNV_USE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ConsumeGoodDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ConsumeGoodDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHC_ORG_SECOND_AYRLNV_USE = new HC_ORG_SECOND_AYRLNV_USEDataTable();
            base.Tables.Add(this.tableHC_ORG_SECOND_AYRLNV_USE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHC_ORG_SECOND_AYRLNV_USE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ConsumeGoodDataSet ds = new ConsumeGoodDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HC_ORG_SECOND_AYRLNV_USERowChangeEventHandler(object sender, HC_ORG_SECOND_AYRLNV_USERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HC_ORG_SECOND_AYRLNV_USEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDATA_PRODUCT_ID;
            
            private global::System.Data.DataColumn columnPROJECT_ID;
            
            private global::System.Data.DataColumn columnPROJECT_PRODUCT_ID;
            
            private global::System.Data.DataColumn columnGOODS_NO;
            
            private global::System.Data.DataColumn columnBARCODE;
            
            private global::System.Data.DataColumn columnPRICE;
            
            private global::System.Data.DataColumn columnFACT_AMOUNT;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnSENDER_ID;
            
            private global::System.Data.DataColumn columnSel;
            
            private global::System.Data.DataColumn columnPRODUCT_CODE;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnCOMMON_NAME;
            
            private global::System.Data.DataColumn columnSPEC;
            
            private global::System.Data.DataColumn columnMODEL;
            
            private global::System.Data.DataColumn columnBRAND;
            
            private global::System.Data.DataColumn columnBATCH_NO;
            
            private global::System.Data.DataColumn columnSALER_ID;
            
            private global::System.Data.DataColumn columnSALER_NAME;
            
            private global::System.Data.DataColumn columnSALER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnSENDER_NAME;
            
            private global::System.Data.DataColumn columnSENDER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnMANU_ID;
            
            private global::System.Data.DataColumn columnMANU_NAME;
            
            private global::System.Data.DataColumn columnMANU_NAME_ABBR;
            
            private global::System.Data.DataColumn columnNum;
            
            private global::System.Data.DataColumn columnDEFAULT_MEASURE;
            
            private global::System.Data.DataColumn columnPRICE1;
            
            private global::System.Data.DataColumn columnBASE_MEASURE;
            
            private global::System.Data.DataColumn columnBASE_MEASURE_SPEC;
            
            private global::System.Data.DataColumn columnBASE_MEASURE_MATER;
            
            private global::System.Data.DataColumn columnVALID_DATE;
            
            private global::System.Data.DataColumn columnStatusName;
            
            private global::System.Data.DataColumn columnSend_Operator_Id;
            
            private global::System.Data.DataColumn columnSend_Operator_Name;
            
            private global::System.Data.DataColumn columnSend_Operate_Date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORG_SECOND_AYRLNV_USEDataTable() {
                this.TableName = "HC_ORG_SECOND_AYRLNV_USE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORG_SECOND_AYRLNV_USEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HC_ORG_SECOND_AYRLNV_USEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_PRODUCT_IDColumn {
                get {
                    return this.columnDATA_PRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_IDColumn {
                get {
                    return this.columnPROJECT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_PRODUCT_IDColumn {
                get {
                    return this.columnPROJECT_PRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GOODS_NOColumn {
                get {
                    return this.columnGOODS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BARCODEColumn {
                get {
                    return this.columnBARCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICEColumn {
                get {
                    return this.columnPRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FACT_AMOUNTColumn {
                get {
                    return this.columnFACT_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_IDColumn {
                get {
                    return this.columnSENDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SelColumn {
                get {
                    return this.columnSel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_CODEColumn {
                get {
                    return this.columnPRODUCT_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMON_NAMEColumn {
                get {
                    return this.columnCOMMON_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECColumn {
                get {
                    return this.columnSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELColumn {
                get {
                    return this.columnMODEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDColumn {
                get {
                    return this.columnBRAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BATCH_NOColumn {
                get {
                    return this.columnBATCH_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_IDColumn {
                get {
                    return this.columnSALER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAMEColumn {
                get {
                    return this.columnSALER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_ABBRColumn {
                get {
                    return this.columnSALER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAMEColumn {
                get {
                    return this.columnSENDER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_ABBRColumn {
                get {
                    return this.columnSENDER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_IDColumn {
                get {
                    return this.columnMANU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAMEColumn {
                get {
                    return this.columnMANU_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANU_NAME_ABBRColumn {
                get {
                    return this.columnMANU_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NumColumn {
                get {
                    return this.columnNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFAULT_MEASUREColumn {
                get {
                    return this.columnDEFAULT_MEASURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRICE1Column {
                get {
                    return this.columnPRICE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_MEASUREColumn {
                get {
                    return this.columnBASE_MEASURE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_MEASURE_SPECColumn {
                get {
                    return this.columnBASE_MEASURE_SPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BASE_MEASURE_MATERColumn {
                get {
                    return this.columnBASE_MEASURE_MATER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VALID_DATEColumn {
                get {
                    return this.columnVALID_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusNameColumn {
                get {
                    return this.columnStatusName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Send_Operator_IdColumn {
                get {
                    return this.columnSend_Operator_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Send_Operator_NameColumn {
                get {
                    return this.columnSend_Operator_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Send_Operate_DateColumn {
                get {
                    return this.columnSend_Operate_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORG_SECOND_AYRLNV_USERow this[int index] {
                get {
                    return ((HC_ORG_SECOND_AYRLNV_USERow)(this.Rows[index]));
                }
            }
            
            public event HC_ORG_SECOND_AYRLNV_USERowChangeEventHandler HC_ORG_SECOND_AYRLNV_USERowChanging;
            
            public event HC_ORG_SECOND_AYRLNV_USERowChangeEventHandler HC_ORG_SECOND_AYRLNV_USERowChanged;
            
            public event HC_ORG_SECOND_AYRLNV_USERowChangeEventHandler HC_ORG_SECOND_AYRLNV_USERowDeleting;
            
            public event HC_ORG_SECOND_AYRLNV_USERowChangeEventHandler HC_ORG_SECOND_AYRLNV_USERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHC_ORG_SECOND_AYRLNV_USERow(HC_ORG_SECOND_AYRLNV_USERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORG_SECOND_AYRLNV_USERow AddHC_ORG_SECOND_AYRLNV_USERow(
                        decimal DATA_PRODUCT_ID, 
                        decimal PROJECT_ID, 
                        decimal PROJECT_PRODUCT_ID, 
                        string GOODS_NO, 
                        string BARCODE, 
                        decimal PRICE, 
                        decimal FACT_AMOUNT, 
                        System.DateTime CREATE_DATE, 
                        decimal SENDER_ID, 
                        string Sel, 
                        string PRODUCT_CODE, 
                        string PRODUCT_NAME, 
                        string COMMON_NAME, 
                        string SPEC, 
                        string MODEL, 
                        string BRAND, 
                        string BATCH_NO, 
                        decimal SALER_ID, 
                        string SALER_NAME, 
                        string SALER_NAME_ABBR, 
                        string SENDER_NAME, 
                        string SENDER_NAME_ABBR, 
                        decimal MANU_ID, 
                        string MANU_NAME, 
                        string MANU_NAME_ABBR, 
                        decimal Num, 
                        string DEFAULT_MEASURE, 
                        decimal PRICE1, 
                        string BASE_MEASURE, 
                        string BASE_MEASURE_SPEC, 
                        string BASE_MEASURE_MATER, 
                        System.DateTime VALID_DATE, 
                        string StatusName, 
                        decimal Send_Operator_Id, 
                        string Send_Operator_Name, 
                        System.DateTime Send_Operate_Date) {
                HC_ORG_SECOND_AYRLNV_USERow rowHC_ORG_SECOND_AYRLNV_USERow = ((HC_ORG_SECOND_AYRLNV_USERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DATA_PRODUCT_ID,
                        PROJECT_ID,
                        PROJECT_PRODUCT_ID,
                        GOODS_NO,
                        BARCODE,
                        PRICE,
                        FACT_AMOUNT,
                        CREATE_DATE,
                        SENDER_ID,
                        Sel,
                        PRODUCT_CODE,
                        PRODUCT_NAME,
                        COMMON_NAME,
                        SPEC,
                        MODEL,
                        BRAND,
                        BATCH_NO,
                        SALER_ID,
                        SALER_NAME,
                        SALER_NAME_ABBR,
                        SENDER_NAME,
                        SENDER_NAME_ABBR,
                        MANU_ID,
                        MANU_NAME,
                        MANU_NAME_ABBR,
                        Num,
                        DEFAULT_MEASURE,
                        PRICE1,
                        BASE_MEASURE,
                        BASE_MEASURE_SPEC,
                        BASE_MEASURE_MATER,
                        VALID_DATE,
                        StatusName,
                        Send_Operator_Id,
                        Send_Operator_Name,
                        Send_Operate_Date};
                rowHC_ORG_SECOND_AYRLNV_USERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHC_ORG_SECOND_AYRLNV_USERow);
                return rowHC_ORG_SECOND_AYRLNV_USERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORG_SECOND_AYRLNV_USERow FindByPROJECT_PRODUCT_ID(decimal PROJECT_PRODUCT_ID) {
                return ((HC_ORG_SECOND_AYRLNV_USERow)(this.Rows.Find(new object[] {
                            PROJECT_PRODUCT_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HC_ORG_SECOND_AYRLNV_USEDataTable cln = ((HC_ORG_SECOND_AYRLNV_USEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HC_ORG_SECOND_AYRLNV_USEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDATA_PRODUCT_ID = base.Columns["DATA_PRODUCT_ID"];
                this.columnPROJECT_ID = base.Columns["PROJECT_ID"];
                this.columnPROJECT_PRODUCT_ID = base.Columns["PROJECT_PRODUCT_ID"];
                this.columnGOODS_NO = base.Columns["GOODS_NO"];
                this.columnBARCODE = base.Columns["BARCODE"];
                this.columnPRICE = base.Columns["PRICE"];
                this.columnFACT_AMOUNT = base.Columns["FACT_AMOUNT"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnSENDER_ID = base.Columns["SENDER_ID"];
                this.columnSel = base.Columns["Sel"];
                this.columnPRODUCT_CODE = base.Columns["PRODUCT_CODE"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnCOMMON_NAME = base.Columns["COMMON_NAME"];
                this.columnSPEC = base.Columns["SPEC"];
                this.columnMODEL = base.Columns["MODEL"];
                this.columnBRAND = base.Columns["BRAND"];
                this.columnBATCH_NO = base.Columns["BATCH_NO"];
                this.columnSALER_ID = base.Columns["SALER_ID"];
                this.columnSALER_NAME = base.Columns["SALER_NAME"];
                this.columnSALER_NAME_ABBR = base.Columns["SALER_NAME_ABBR"];
                this.columnSENDER_NAME = base.Columns["SENDER_NAME"];
                this.columnSENDER_NAME_ABBR = base.Columns["SENDER_NAME_ABBR"];
                this.columnMANU_ID = base.Columns["MANU_ID"];
                this.columnMANU_NAME = base.Columns["MANU_NAME"];
                this.columnMANU_NAME_ABBR = base.Columns["MANU_NAME_ABBR"];
                this.columnNum = base.Columns["Num"];
                this.columnDEFAULT_MEASURE = base.Columns["DEFAULT_MEASURE"];
                this.columnPRICE1 = base.Columns["PRICE1"];
                this.columnBASE_MEASURE = base.Columns["BASE_MEASURE"];
                this.columnBASE_MEASURE_SPEC = base.Columns["BASE_MEASURE_SPEC"];
                this.columnBASE_MEASURE_MATER = base.Columns["BASE_MEASURE_MATER"];
                this.columnVALID_DATE = base.Columns["VALID_DATE"];
                this.columnStatusName = base.Columns["StatusName"];
                this.columnSend_Operator_Id = base.Columns["Send_Operator_Id"];
                this.columnSend_Operator_Name = base.Columns["Send_Operator_Name"];
                this.columnSend_Operate_Date = base.Columns["Send_Operate_Date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDATA_PRODUCT_ID = new global::System.Data.DataColumn("DATA_PRODUCT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_PRODUCT_ID);
                this.columnPROJECT_ID = new global::System.Data.DataColumn("PROJECT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_ID);
                this.columnPROJECT_PRODUCT_ID = new global::System.Data.DataColumn("PROJECT_PRODUCT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_PRODUCT_ID);
                this.columnGOODS_NO = new global::System.Data.DataColumn("GOODS_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOODS_NO);
                this.columnBARCODE = new global::System.Data.DataColumn("BARCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBARCODE);
                this.columnPRICE = new global::System.Data.DataColumn("PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE);
                this.columnFACT_AMOUNT = new global::System.Data.DataColumn("FACT_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFACT_AMOUNT);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnSENDER_ID = new global::System.Data.DataColumn("SENDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_ID);
                this.columnSel = new global::System.Data.DataColumn("Sel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSel);
                this.columnPRODUCT_CODE = new global::System.Data.DataColumn("PRODUCT_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_CODE);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnCOMMON_NAME = new global::System.Data.DataColumn("COMMON_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMON_NAME);
                this.columnSPEC = new global::System.Data.DataColumn("SPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEC);
                this.columnMODEL = new global::System.Data.DataColumn("MODEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL);
                this.columnBRAND = new global::System.Data.DataColumn("BRAND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRAND);
                this.columnBATCH_NO = new global::System.Data.DataColumn("BATCH_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBATCH_NO);
                this.columnSALER_ID = new global::System.Data.DataColumn("SALER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_ID);
                this.columnSALER_NAME = new global::System.Data.DataColumn("SALER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME);
                this.columnSALER_NAME_ABBR = new global::System.Data.DataColumn("SALER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_ABBR);
                this.columnSENDER_NAME = new global::System.Data.DataColumn("SENDER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME);
                this.columnSENDER_NAME_ABBR = new global::System.Data.DataColumn("SENDER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_ABBR);
                this.columnMANU_ID = new global::System.Data.DataColumn("MANU_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_ID);
                this.columnMANU_NAME = new global::System.Data.DataColumn("MANU_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME);
                this.columnMANU_NAME_ABBR = new global::System.Data.DataColumn("MANU_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANU_NAME_ABBR);
                this.columnNum = new global::System.Data.DataColumn("Num", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum);
                this.columnDEFAULT_MEASURE = new global::System.Data.DataColumn("DEFAULT_MEASURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFAULT_MEASURE);
                this.columnPRICE1 = new global::System.Data.DataColumn("PRICE1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRICE1);
                this.columnBASE_MEASURE = new global::System.Data.DataColumn("BASE_MEASURE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_MEASURE);
                this.columnBASE_MEASURE_SPEC = new global::System.Data.DataColumn("BASE_MEASURE_SPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_MEASURE_SPEC);
                this.columnBASE_MEASURE_MATER = new global::System.Data.DataColumn("BASE_MEASURE_MATER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASE_MEASURE_MATER);
                this.columnVALID_DATE = new global::System.Data.DataColumn("VALID_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVALID_DATE);
                this.columnStatusName = new global::System.Data.DataColumn("StatusName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusName);
                this.columnSend_Operator_Id = new global::System.Data.DataColumn("Send_Operator_Id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSend_Operator_Id);
                this.columnSend_Operator_Name = new global::System.Data.DataColumn("Send_Operator_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSend_Operator_Name);
                this.columnSend_Operate_Date = new global::System.Data.DataColumn("Send_Operate_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSend_Operate_Date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPROJECT_PRODUCT_ID}, true));
                this.columnPROJECT_ID.AllowDBNull = false;
                this.columnPROJECT_PRODUCT_ID.AllowDBNull = false;
                this.columnPROJECT_PRODUCT_ID.Unique = true;
                this.columnGOODS_NO.MaxLength = 100;
                this.columnBARCODE.MaxLength = 50;
                this.columnFACT_AMOUNT.AllowDBNull = false;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnSel.ReadOnly = true;
                this.columnSel.MaxLength = 1;
                this.columnPRODUCT_CODE.AllowDBNull = false;
                this.columnPRODUCT_CODE.MaxLength = 100;
                this.columnPRODUCT_NAME.AllowDBNull = false;
                this.columnPRODUCT_NAME.MaxLength = 100;
                this.columnCOMMON_NAME.AllowDBNull = false;
                this.columnCOMMON_NAME.MaxLength = 100;
                this.columnSPEC.AllowDBNull = false;
                this.columnSPEC.MaxLength = 4000;
                this.columnMODEL.AllowDBNull = false;
                this.columnMODEL.MaxLength = 3000;
                this.columnBRAND.AllowDBNull = false;
                this.columnBRAND.MaxLength = 50;
                this.columnBATCH_NO.MaxLength = 150;
                this.columnSALER_ID.AllowDBNull = false;
                this.columnSALER_NAME.AllowDBNull = false;
                this.columnSALER_NAME.MaxLength = 150;
                this.columnSALER_NAME_ABBR.AllowDBNull = false;
                this.columnSALER_NAME_ABBR.MaxLength = 150;
                this.columnSENDER_NAME.AllowDBNull = false;
                this.columnSENDER_NAME.MaxLength = 150;
                this.columnSENDER_NAME_ABBR.AllowDBNull = false;
                this.columnSENDER_NAME_ABBR.MaxLength = 150;
                this.columnMANU_ID.AllowDBNull = false;
                this.columnMANU_NAME.AllowDBNull = false;
                this.columnMANU_NAME.MaxLength = 150;
                this.columnMANU_NAME_ABBR.AllowDBNull = false;
                this.columnMANU_NAME_ABBR.MaxLength = 150;
                this.columnNum.AllowDBNull = false;
                this.columnDEFAULT_MEASURE.MaxLength = 50;
                this.columnBASE_MEASURE.MaxLength = 50;
                this.columnBASE_MEASURE_SPEC.MaxLength = 100;
                this.columnBASE_MEASURE_MATER.MaxLength = 100;
                this.columnStatusName.ReadOnly = true;
                this.columnStatusName.MaxLength = 8;
                this.columnSend_Operator_Id.AllowDBNull = false;
                this.columnSend_Operator_Name.AllowDBNull = false;
                this.columnSend_Operator_Name.MaxLength = 200;
                this.columnSend_Operate_Date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORG_SECOND_AYRLNV_USERow NewHC_ORG_SECOND_AYRLNV_USERow() {
                return ((HC_ORG_SECOND_AYRLNV_USERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HC_ORG_SECOND_AYRLNV_USERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HC_ORG_SECOND_AYRLNV_USERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HC_ORG_SECOND_AYRLNV_USERowChanged != null)) {
                    this.HC_ORG_SECOND_AYRLNV_USERowChanged(this, new HC_ORG_SECOND_AYRLNV_USERowChangeEvent(((HC_ORG_SECOND_AYRLNV_USERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HC_ORG_SECOND_AYRLNV_USERowChanging != null)) {
                    this.HC_ORG_SECOND_AYRLNV_USERowChanging(this, new HC_ORG_SECOND_AYRLNV_USERowChangeEvent(((HC_ORG_SECOND_AYRLNV_USERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HC_ORG_SECOND_AYRLNV_USERowDeleted != null)) {
                    this.HC_ORG_SECOND_AYRLNV_USERowDeleted(this, new HC_ORG_SECOND_AYRLNV_USERowChangeEvent(((HC_ORG_SECOND_AYRLNV_USERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HC_ORG_SECOND_AYRLNV_USERowDeleting != null)) {
                    this.HC_ORG_SECOND_AYRLNV_USERowDeleting(this, new HC_ORG_SECOND_AYRLNV_USERowChangeEvent(((HC_ORG_SECOND_AYRLNV_USERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHC_ORG_SECOND_AYRLNV_USERow(HC_ORG_SECOND_AYRLNV_USERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ConsumeGoodDataSet ds = new ConsumeGoodDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HC_ORG_SECOND_AYRLNV_USEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HC_ORG_SECOND_AYRLNV_USERow : global::System.Data.DataRow {
            
            private HC_ORG_SECOND_AYRLNV_USEDataTable tableHC_ORG_SECOND_AYRLNV_USE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORG_SECOND_AYRLNV_USERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHC_ORG_SECOND_AYRLNV_USE = ((HC_ORG_SECOND_AYRLNV_USEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DATA_PRODUCT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.DATA_PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“DATA_PRODUCT_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.DATA_PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROJECT_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.PROJECT_IDColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.PROJECT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROJECT_PRODUCT_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.PROJECT_PRODUCT_IDColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.PROJECT_PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GOODS_NO {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.GOODS_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“GOODS_NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.GOODS_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BARCODE {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.BARCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“BARCODE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.BARCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRICE {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRICEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“PRICE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FACT_AMOUNT {
                get {
                    return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.FACT_AMOUNTColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.FACT_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.CREATE_DATEColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SENDER_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“SENDER_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sel {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“Sel”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_CODE {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRODUCT_CODEColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRODUCT_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRODUCT_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMON_NAME {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.COMMON_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.COMMON_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPEC {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SPECColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODEL {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.MODELColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.MODELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRAND {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.BRANDColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.BRANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BATCH_NO {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.BATCH_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“BATCH_NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.BATCH_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALER_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SALER_IDColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SALER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SALER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SALER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SALER_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SALER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MANU_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.MANU_IDColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.MANU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.MANU_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.MANU_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANU_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.MANU_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.MANU_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Num {
                get {
                    return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.NumColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEFAULT_MEASURE {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.DEFAULT_MEASUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“DEFAULT_MEASURE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.DEFAULT_MEASUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PRICE1 {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRICE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“PRICE1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRICE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BASE_MEASURE {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASUREColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“BASE_MEASURE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASUREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BASE_MEASURE_SPEC {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_SPECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“BASE_MEASURE_SPEC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_SPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BASE_MEASURE_MATER {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_MATERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“BASE_MEASURE_MATER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_MATERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VALID_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.VALID_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“VALID_DATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.VALID_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatusName {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.StatusNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORG_SECOND_AYRLNV_USE”中列“StatusName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.StatusNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Send_Operator_Id {
                get {
                    return ((decimal)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.Send_Operator_IdColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.Send_Operator_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Send_Operator_Name {
                get {
                    return ((string)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.Send_Operator_NameColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.Send_Operator_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Send_Operate_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableHC_ORG_SECOND_AYRLNV_USE.Send_Operate_DateColumn]));
                }
                set {
                    this[this.tableHC_ORG_SECOND_AYRLNV_USE.Send_Operate_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_PRODUCT_IDNull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.DATA_PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_PRODUCT_IDNull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.DATA_PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGOODS_NONull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.GOODS_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGOODS_NONull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.GOODS_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBARCODENull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.BARCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBARCODENull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.BARCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICENull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.PRICEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICENull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRICEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSENDER_IDNull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSENDER_IDNull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.SENDER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSelNull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.SelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSelNull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.SelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBATCH_NONull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.BATCH_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBATCH_NONull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.BATCH_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEFAULT_MEASURENull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.DEFAULT_MEASUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEFAULT_MEASURENull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.DEFAULT_MEASUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPRICE1Null() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.PRICE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPRICE1Null() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.PRICE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_MEASURENull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASUREColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_MEASURENull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASUREColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_MEASURE_SPECNull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_SPECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_MEASURE_SPECNull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_SPECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBASE_MEASURE_MATERNull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_MATERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBASE_MEASURE_MATERNull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.BASE_MEASURE_MATERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVALID_DATENull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.VALID_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVALID_DATENull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.VALID_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNameNull() {
                return this.IsNull(this.tableHC_ORG_SECOND_AYRLNV_USE.StatusNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNameNull() {
                this[this.tableHC_ORG_SECOND_AYRLNV_USE.StatusNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HC_ORG_SECOND_AYRLNV_USERowChangeEvent : global::System.EventArgs {
            
            private HC_ORG_SECOND_AYRLNV_USERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORG_SECOND_AYRLNV_USERowChangeEvent(HC_ORG_SECOND_AYRLNV_USERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORG_SECOND_AYRLNV_USERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData.ConsumeGoodDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HC_ORG_SECOND_AYRLNV_USETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HC_ORG_SECOND_AYRLNV_USETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HC_ORG_SECOND_AYRLNV_USE";
            tableMapping.ColumnMappings.Add("DATA_PRODUCT_ID", "DATA_PRODUCT_ID");
            tableMapping.ColumnMappings.Add("PROJECT_ID", "PROJECT_ID");
            tableMapping.ColumnMappings.Add("PROJECT_PRODUCT_ID", "PROJECT_PRODUCT_ID");
            tableMapping.ColumnMappings.Add("GOODS_NO", "GOODS_NO");
            tableMapping.ColumnMappings.Add("BARCODE", "BARCODE");
            tableMapping.ColumnMappings.Add("PRICE", "PRICE");
            tableMapping.ColumnMappings.Add("FACT_AMOUNT", "FACT_AMOUNT");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("SENDER_ID", "SENDER_ID");
            tableMapping.ColumnMappings.Add("Sel", "Sel");
            tableMapping.ColumnMappings.Add("PRODUCT_CODE", "PRODUCT_CODE");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("COMMON_NAME", "COMMON_NAME");
            tableMapping.ColumnMappings.Add("SPEC", "SPEC");
            tableMapping.ColumnMappings.Add("MODEL", "MODEL");
            tableMapping.ColumnMappings.Add("BRAND", "BRAND");
            tableMapping.ColumnMappings.Add("BATCH_NO", "BATCH_NO");
            tableMapping.ColumnMappings.Add("SALER_ID", "SALER_ID");
            tableMapping.ColumnMappings.Add("SALER_NAME", "SALER_NAME");
            tableMapping.ColumnMappings.Add("SALER_NAME_ABBR", "SALER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("SENDER_NAME", "SENDER_NAME");
            tableMapping.ColumnMappings.Add("SENDER_NAME_ABBR", "SENDER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("MANU_ID", "MANU_ID");
            tableMapping.ColumnMappings.Add("MANU_NAME", "MANU_NAME");
            tableMapping.ColumnMappings.Add("MANU_NAME_ABBR", "MANU_NAME_ABBR");
            tableMapping.ColumnMappings.Add("Num", "Num");
            tableMapping.ColumnMappings.Add("DEFAULT_MEASURE", "DEFAULT_MEASURE");
            tableMapping.ColumnMappings.Add("PRICE1", "PRICE1");
            tableMapping.ColumnMappings.Add("BASE_MEASURE", "BASE_MEASURE");
            tableMapping.ColumnMappings.Add("BASE_MEASURE_SPEC", "BASE_MEASURE_SPEC");
            tableMapping.ColumnMappings.Add("BASE_MEASURE_MATER", "BASE_MEASURE_MATER");
            tableMapping.ColumnMappings.Add("VALID_DATE", "VALID_DATE");
            tableMapping.ColumnMappings.Add("StatusName", "StatusName");
            tableMapping.ColumnMappings.Add("Send_Operator_Id", "Send_Operator_Id");
            tableMapping.ColumnMappings.Add("Send_Operator_Name", "Send_Operator_Name");
            tableMapping.ColumnMappings.Add("Send_Operate_Date", "Send_Operate_Date");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Emedchina.TradeAssistant.Client.Properties.Settings.Default.TradeAssistantConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "Select\r\n                            \'0\' As Sel,\r\n                            op.D" +
                "ATA_PRODUCT_ID,\r\n                            op.ID As PROJECT_PRODUCT_ID,\r\n     " +
                "                       op.PROJECT_ID,\r\n                            op.Code As PR" +
                "ODUCT_CODE,\r\n                            op.PRODUCT_NAME,\r\n                     " +
                "       op.COMMON_NAME,\r\n                            op.GOODS_NO,\r\n              " +
                "              osi.SPEC,\r\n                            osi.MODEL,\r\n               " +
                "             osi.BRAND,\r\n                            osa.BATCH_NO,\r\n            " +
                "                op.SALER_ID,\r\n                            org1.ORG_NAME As SALER" +
                "_NAME,\r\n                            org1.ORG_ABBR As SALER_NAME_ABBR,\r\n         " +
                "                   op.SENDER_ID,\r\n                            org2.ORG_NAME As S" +
                "ENDER_NAME,\r\n                            org2.ORG_ABBR As SENDER_NAME_ABBR,\r\n   " +
                "                         op.MANU_ID,\r\n                            org3.ORG_NAME " +
                "As MANU_NAME,\r\n                            org3.ORG_ABBR As MANU_NAME_ABBR,\r\n   " +
                "                         op.PRICE,\r\n                            osa.Num,\r\n      " +
                "                      osau.FACT_AMOUNT,\r\n                            op.DEFAULT_" +
                "MEASURE,\r\n                            op.BARCODE,\r\n                            o" +
                "p.PRICE,\r\n                            op.BASE_MEASURE,\r\n                        " +
                "    op.BASE_MEASURE_SPEC,\r\n                            op.BASE_MEASURE_MATER,\r\n " +
                "                           osa.VALID_DATE,\r\n                            (case os" +
                "au.STATUS when \'1\' then \'使用\' when \'2\' then \'审核通过\' end) As StatusName,\r\n         " +
                "                   osau.CREATE_DATE,\r\n                            osi.CREATE_USE" +
                "R_ID As Send_Operator_Id,\r\n                            osi.CREATE_USER_NAME As S" +
                "end_Operator_Name,\r\n                            osi.CREATE_DATE As Send_Operate_" +
                "Date\r\n                            From HC_ORG_SECOND_AYRLNV_USE osau,HC_ORD_PROD" +
                "UCT op,HC_ORG org1,HC_ORG org2,HC_ORG org3\r\n                            ,HC_ORD_" +
                "SECOND_AYRLNV osa,HC_ORD_ORD_STOCK_ITEM osi\r\n                            Where o" +
                "sa.DATA_PRODUCT_ID=osau.DATA_PRODUCT_ID And osau.DATA_PRODUCT_ID=op.DATA_PRODUCT" +
                "_ID And osau.SECOND_ID=osa.Id\r\n                            And org1.ID=op.SALER_" +
                "ID And org2.ID=op.SENDER_ID And org3.ID=op.MANU_ID\r\n                            " +
                "And osa.STOCK_ITEM_ID=osi.ID \r\n                            And osau.STATUS <> \'0" +
                "\'";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ConsumeGoodDataSet.HC_ORG_SECOND_AYRLNV_USEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ConsumeGoodDataSet.HC_ORG_SECOND_AYRLNV_USEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ConsumeGoodDataSet.HC_ORG_SECOND_AYRLNV_USEDataTable dataTable = new ConsumeGoodDataSet.HC_ORG_SECOND_AYRLNV_USEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591
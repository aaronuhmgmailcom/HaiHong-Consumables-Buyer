//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("QueryOrderItemDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class QueryOrderItemDataSet : global::System.Data.DataSet {
        
        private HC_ORD_ORDER_ITEMDataTable tableHC_ORD_ORDER_ITEM;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QueryOrderItemDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected QueryOrderItemDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["HC_ORD_ORDER_ITEM"] != null)) {
                    base.Tables.Add(new HC_ORD_ORDER_ITEMDataTable(ds.Tables["HC_ORD_ORDER_ITEM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HC_ORD_ORDER_ITEMDataTable HC_ORD_ORDER_ITEM {
            get {
                return this.tableHC_ORD_ORDER_ITEM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            QueryOrderItemDataSet cln = ((QueryOrderItemDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["HC_ORD_ORDER_ITEM"] != null)) {
                    base.Tables.Add(new HC_ORD_ORDER_ITEMDataTable(ds.Tables["HC_ORD_ORDER_ITEM"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableHC_ORD_ORDER_ITEM = ((HC_ORD_ORDER_ITEMDataTable)(base.Tables["HC_ORD_ORDER_ITEM"]));
            if ((initTable == true)) {
                if ((this.tableHC_ORD_ORDER_ITEM != null)) {
                    this.tableHC_ORD_ORDER_ITEM.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "QueryOrderItemDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/QueryOrderItemDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableHC_ORD_ORDER_ITEM = new HC_ORD_ORDER_ITEMDataTable();
            base.Tables.Add(this.tableHC_ORD_ORDER_ITEM);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHC_ORD_ORDER_ITEM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            QueryOrderItemDataSet ds = new QueryOrderItemDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void HC_ORD_ORDER_ITEMRowChangeEventHandler(object sender, HC_ORD_ORDER_ITEMRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HC_ORD_ORDER_ITEMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDATA_PRODUCT_ID;
            
            private global::System.Data.DataColumn columnSALER_ID;
            
            private global::System.Data.DataColumn columnSALER_NAME;
            
            private global::System.Data.DataColumn columnSALER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnSENDER_ID;
            
            private global::System.Data.DataColumn columnSENDER_NAME;
            
            private global::System.Data.DataColumn columnSENDER_NAME_ABBR;
            
            private global::System.Data.DataColumn columnMANUFACTURE_ID;
            
            private global::System.Data.DataColumn columnMANUFACTURE_NAME;
            
            private global::System.Data.DataColumn columnMANUFACTURE_NAME_ABBR;
            
            private global::System.Data.DataColumn columnCOMMON_NAME;
            
            private global::System.Data.DataColumn columnPRODUCT_NAME;
            
            private global::System.Data.DataColumn columnSPEC;
            
            private global::System.Data.DataColumn columnMODEL;
            
            private global::System.Data.DataColumn columnBRAND;
            
            private global::System.Data.DataColumn columnSTORE_ROOM_ID;
            
            private global::System.Data.DataColumn columnSTORE_ROOM_NAME;
            
            private global::System.Data.DataColumn columnTRADE_PRICE;
            
            private global::System.Data.DataColumn columnAMOUNT;
            
            private global::System.Data.DataColumn columnOVER_AMOUNT;
            
            private global::System.Data.DataColumn columnOVER_SUM;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnORDER_ITEM_ID;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columntotalPrice;
            
            private global::System.Data.DataColumn columnORDER_CODE;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columnIsQuickSend;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORDER_ITEMDataTable() {
                this.TableName = "HC_ORD_ORDER_ITEM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_ORDER_ITEMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HC_ORD_ORDER_ITEMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_PRODUCT_IDColumn {
                get {
                    return this.columnDATA_PRODUCT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_IDColumn {
                get {
                    return this.columnSALER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAMEColumn {
                get {
                    return this.columnSALER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALER_NAME_ABBRColumn {
                get {
                    return this.columnSALER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_IDColumn {
                get {
                    return this.columnSENDER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAMEColumn {
                get {
                    return this.columnSENDER_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SENDER_NAME_ABBRColumn {
                get {
                    return this.columnSENDER_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANUFACTURE_IDColumn {
                get {
                    return this.columnMANUFACTURE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANUFACTURE_NAMEColumn {
                get {
                    return this.columnMANUFACTURE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MANUFACTURE_NAME_ABBRColumn {
                get {
                    return this.columnMANUFACTURE_NAME_ABBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMON_NAMEColumn {
                get {
                    return this.columnCOMMON_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRODUCT_NAMEColumn {
                get {
                    return this.columnPRODUCT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPECColumn {
                get {
                    return this.columnSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODELColumn {
                get {
                    return this.columnMODEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BRANDColumn {
                get {
                    return this.columnBRAND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_ROOM_IDColumn {
                get {
                    return this.columnSTORE_ROOM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STORE_ROOM_NAMEColumn {
                get {
                    return this.columnSTORE_ROOM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRADE_PRICEColumn {
                get {
                    return this.columnTRADE_PRICE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AMOUNTColumn {
                get {
                    return this.columnAMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVER_AMOUNTColumn {
                get {
                    return this.columnOVER_AMOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVER_SUMColumn {
                get {
                    return this.columnOVER_SUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDER_ITEM_IDColumn {
                get {
                    return this.columnORDER_ITEM_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalPriceColumn {
                get {
                    return this.columntotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDER_CODEColumn {
                get {
                    return this.columnORDER_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsQuickSendColumn {
                get {
                    return this.columnIsQuickSend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORDER_ITEMRow this[int index] {
                get {
                    return ((HC_ORD_ORDER_ITEMRow)(this.Rows[index]));
                }
            }
            
            public event HC_ORD_ORDER_ITEMRowChangeEventHandler HC_ORD_ORDER_ITEMRowChanging;
            
            public event HC_ORD_ORDER_ITEMRowChangeEventHandler HC_ORD_ORDER_ITEMRowChanged;
            
            public event HC_ORD_ORDER_ITEMRowChangeEventHandler HC_ORD_ORDER_ITEMRowDeleting;
            
            public event HC_ORD_ORDER_ITEMRowChangeEventHandler HC_ORD_ORDER_ITEMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHC_ORD_ORDER_ITEMRow(HC_ORD_ORDER_ITEMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORDER_ITEMRow AddHC_ORD_ORDER_ITEMRow(
                        decimal DATA_PRODUCT_ID, 
                        decimal SALER_ID, 
                        string SALER_NAME, 
                        string SALER_NAME_ABBR, 
                        decimal SENDER_ID, 
                        string SENDER_NAME, 
                        string SENDER_NAME_ABBR, 
                        decimal MANUFACTURE_ID, 
                        string MANUFACTURE_NAME, 
                        string MANUFACTURE_NAME_ABBR, 
                        string COMMON_NAME, 
                        string PRODUCT_NAME, 
                        string SPEC, 
                        string MODEL, 
                        string BRAND, 
                        decimal STORE_ROOM_ID, 
                        string STORE_ROOM_NAME, 
                        decimal TRADE_PRICE, 
                        decimal AMOUNT, 
                        decimal OVER_AMOUNT, 
                        decimal OVER_SUM, 
                        System.DateTime CREATE_DATE, 
                        decimal ORDER_ITEM_ID, 
                        string CODE, 
                        decimal totalPrice, 
                        string ORDER_CODE, 
                        string state, 
                        string IsQuickSend) {
                HC_ORD_ORDER_ITEMRow rowHC_ORD_ORDER_ITEMRow = ((HC_ORD_ORDER_ITEMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DATA_PRODUCT_ID,
                        SALER_ID,
                        SALER_NAME,
                        SALER_NAME_ABBR,
                        SENDER_ID,
                        SENDER_NAME,
                        SENDER_NAME_ABBR,
                        MANUFACTURE_ID,
                        MANUFACTURE_NAME,
                        MANUFACTURE_NAME_ABBR,
                        COMMON_NAME,
                        PRODUCT_NAME,
                        SPEC,
                        MODEL,
                        BRAND,
                        STORE_ROOM_ID,
                        STORE_ROOM_NAME,
                        TRADE_PRICE,
                        AMOUNT,
                        OVER_AMOUNT,
                        OVER_SUM,
                        CREATE_DATE,
                        ORDER_ITEM_ID,
                        CODE,
                        totalPrice,
                        ORDER_CODE,
                        state,
                        IsQuickSend};
                rowHC_ORD_ORDER_ITEMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHC_ORD_ORDER_ITEMRow);
                return rowHC_ORD_ORDER_ITEMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORDER_ITEMRow FindByORDER_ITEM_ID(decimal ORDER_ITEM_ID) {
                return ((HC_ORD_ORDER_ITEMRow)(this.Rows.Find(new object[] {
                            ORDER_ITEM_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HC_ORD_ORDER_ITEMDataTable cln = ((HC_ORD_ORDER_ITEMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HC_ORD_ORDER_ITEMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDATA_PRODUCT_ID = base.Columns["DATA_PRODUCT_ID"];
                this.columnSALER_ID = base.Columns["SALER_ID"];
                this.columnSALER_NAME = base.Columns["SALER_NAME"];
                this.columnSALER_NAME_ABBR = base.Columns["SALER_NAME_ABBR"];
                this.columnSENDER_ID = base.Columns["SENDER_ID"];
                this.columnSENDER_NAME = base.Columns["SENDER_NAME"];
                this.columnSENDER_NAME_ABBR = base.Columns["SENDER_NAME_ABBR"];
                this.columnMANUFACTURE_ID = base.Columns["MANUFACTURE_ID"];
                this.columnMANUFACTURE_NAME = base.Columns["MANUFACTURE_NAME"];
                this.columnMANUFACTURE_NAME_ABBR = base.Columns["MANUFACTURE_NAME_ABBR"];
                this.columnCOMMON_NAME = base.Columns["COMMON_NAME"];
                this.columnPRODUCT_NAME = base.Columns["PRODUCT_NAME"];
                this.columnSPEC = base.Columns["SPEC"];
                this.columnMODEL = base.Columns["MODEL"];
                this.columnBRAND = base.Columns["BRAND"];
                this.columnSTORE_ROOM_ID = base.Columns["STORE_ROOM_ID"];
                this.columnSTORE_ROOM_NAME = base.Columns["STORE_ROOM_NAME"];
                this.columnTRADE_PRICE = base.Columns["TRADE_PRICE"];
                this.columnAMOUNT = base.Columns["AMOUNT"];
                this.columnOVER_AMOUNT = base.Columns["OVER_AMOUNT"];
                this.columnOVER_SUM = base.Columns["OVER_SUM"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnORDER_ITEM_ID = base.Columns["ORDER_ITEM_ID"];
                this.columnCODE = base.Columns["CODE"];
                this.columntotalPrice = base.Columns["totalPrice"];
                this.columnORDER_CODE = base.Columns["ORDER_CODE"];
                this.columnstate = base.Columns["state"];
                this.columnIsQuickSend = base.Columns["IsQuickSend"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDATA_PRODUCT_ID = new global::System.Data.DataColumn("DATA_PRODUCT_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_PRODUCT_ID);
                this.columnSALER_ID = new global::System.Data.DataColumn("SALER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_ID);
                this.columnSALER_NAME = new global::System.Data.DataColumn("SALER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME);
                this.columnSALER_NAME_ABBR = new global::System.Data.DataColumn("SALER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALER_NAME_ABBR);
                this.columnSENDER_ID = new global::System.Data.DataColumn("SENDER_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_ID);
                this.columnSENDER_NAME = new global::System.Data.DataColumn("SENDER_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME);
                this.columnSENDER_NAME_ABBR = new global::System.Data.DataColumn("SENDER_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSENDER_NAME_ABBR);
                this.columnMANUFACTURE_ID = new global::System.Data.DataColumn("MANUFACTURE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANUFACTURE_ID);
                this.columnMANUFACTURE_NAME = new global::System.Data.DataColumn("MANUFACTURE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANUFACTURE_NAME);
                this.columnMANUFACTURE_NAME_ABBR = new global::System.Data.DataColumn("MANUFACTURE_NAME_ABBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANUFACTURE_NAME_ABBR);
                this.columnCOMMON_NAME = new global::System.Data.DataColumn("COMMON_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMON_NAME);
                this.columnPRODUCT_NAME = new global::System.Data.DataColumn("PRODUCT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRODUCT_NAME);
                this.columnSPEC = new global::System.Data.DataColumn("SPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPEC);
                this.columnMODEL = new global::System.Data.DataColumn("MODEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODEL);
                this.columnBRAND = new global::System.Data.DataColumn("BRAND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBRAND);
                this.columnSTORE_ROOM_ID = new global::System.Data.DataColumn("STORE_ROOM_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_ROOM_ID);
                this.columnSTORE_ROOM_NAME = new global::System.Data.DataColumn("STORE_ROOM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTORE_ROOM_NAME);
                this.columnTRADE_PRICE = new global::System.Data.DataColumn("TRADE_PRICE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRADE_PRICE);
                this.columnAMOUNT = new global::System.Data.DataColumn("AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMOUNT);
                this.columnOVER_AMOUNT = new global::System.Data.DataColumn("OVER_AMOUNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVER_AMOUNT);
                this.columnOVER_SUM = new global::System.Data.DataColumn("OVER_SUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVER_SUM);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnORDER_ITEM_ID = new global::System.Data.DataColumn("ORDER_ITEM_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_ITEM_ID);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columntotalPrice = new global::System.Data.DataColumn("totalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalPrice);
                this.columnORDER_CODE = new global::System.Data.DataColumn("ORDER_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDER_CODE);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnIsQuickSend = new global::System.Data.DataColumn("IsQuickSend", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsQuickSend);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnORDER_ITEM_ID}, true));
                this.columnSALER_ID.AllowDBNull = false;
                this.columnSALER_NAME.AllowDBNull = false;
                this.columnSALER_NAME.MaxLength = 150;
                this.columnSALER_NAME_ABBR.AllowDBNull = false;
                this.columnSALER_NAME_ABBR.MaxLength = 150;
                this.columnSENDER_ID.AllowDBNull = false;
                this.columnSENDER_NAME.AllowDBNull = false;
                this.columnSENDER_NAME.MaxLength = 150;
                this.columnSENDER_NAME_ABBR.AllowDBNull = false;
                this.columnSENDER_NAME_ABBR.MaxLength = 150;
                this.columnMANUFACTURE_ID.AllowDBNull = false;
                this.columnMANUFACTURE_NAME.AllowDBNull = false;
                this.columnMANUFACTURE_NAME.MaxLength = 150;
                this.columnMANUFACTURE_NAME_ABBR.AllowDBNull = false;
                this.columnMANUFACTURE_NAME_ABBR.MaxLength = 150;
                this.columnCOMMON_NAME.AllowDBNull = false;
                this.columnCOMMON_NAME.MaxLength = 100;
                this.columnPRODUCT_NAME.AllowDBNull = false;
                this.columnPRODUCT_NAME.MaxLength = 100;
                this.columnSPEC.AllowDBNull = false;
                this.columnSPEC.MaxLength = 4000;
                this.columnMODEL.AllowDBNull = false;
                this.columnMODEL.MaxLength = 3000;
                this.columnBRAND.AllowDBNull = false;
                this.columnBRAND.MaxLength = 50;
                this.columnSTORE_ROOM_NAME.MaxLength = 150;
                this.columnTRADE_PRICE.AllowDBNull = false;
                this.columnAMOUNT.AllowDBNull = false;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnORDER_ITEM_ID.AllowDBNull = false;
                this.columnORDER_ITEM_ID.Unique = true;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columntotalPrice.AllowDBNull = false;
                this.columnORDER_CODE.AllowDBNull = false;
                this.columnORDER_CODE.MaxLength = 50;
                this.columnstate.ReadOnly = true;
                this.columnstate.MaxLength = 6;
                this.columnIsQuickSend.ReadOnly = true;
                this.columnIsQuickSend.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORDER_ITEMRow NewHC_ORD_ORDER_ITEMRow() {
                return ((HC_ORD_ORDER_ITEMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HC_ORD_ORDER_ITEMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HC_ORD_ORDER_ITEMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HC_ORD_ORDER_ITEMRowChanged != null)) {
                    this.HC_ORD_ORDER_ITEMRowChanged(this, new HC_ORD_ORDER_ITEMRowChangeEvent(((HC_ORD_ORDER_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HC_ORD_ORDER_ITEMRowChanging != null)) {
                    this.HC_ORD_ORDER_ITEMRowChanging(this, new HC_ORD_ORDER_ITEMRowChangeEvent(((HC_ORD_ORDER_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HC_ORD_ORDER_ITEMRowDeleted != null)) {
                    this.HC_ORD_ORDER_ITEMRowDeleted(this, new HC_ORD_ORDER_ITEMRowChangeEvent(((HC_ORD_ORDER_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HC_ORD_ORDER_ITEMRowDeleting != null)) {
                    this.HC_ORD_ORDER_ITEMRowDeleting(this, new HC_ORD_ORDER_ITEMRowChangeEvent(((HC_ORD_ORDER_ITEMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHC_ORD_ORDER_ITEMRow(HC_ORD_ORDER_ITEMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QueryOrderItemDataSet ds = new QueryOrderItemDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HC_ORD_ORDER_ITEMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HC_ORD_ORDER_ITEMRow : global::System.Data.DataRow {
            
            private HC_ORD_ORDER_ITEMDataTable tableHC_ORD_ORDER_ITEM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HC_ORD_ORDER_ITEMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHC_ORD_ORDER_ITEM = ((HC_ORD_ORDER_ITEMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DATA_PRODUCT_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.DATA_PRODUCT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORDER_ITEM”中列“DATA_PRODUCT_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.DATA_PRODUCT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SALER_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.SALER_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.SALER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.SALER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.SALER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALER_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.SALER_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.SALER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SENDER_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.SENDER_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.SENDER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.SENDER_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.SENDER_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SENDER_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.SENDER_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.SENDER_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MANUFACTURE_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.MANUFACTURE_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.MANUFACTURE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANUFACTURE_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.MANUFACTURE_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.MANUFACTURE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MANUFACTURE_NAME_ABBR {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.MANUFACTURE_NAME_ABBRColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.MANUFACTURE_NAME_ABBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMON_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.COMMON_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.COMMON_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRODUCT_NAME {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.PRODUCT_NAMEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.PRODUCT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPEC {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.SPECColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.SPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MODEL {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.MODELColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.MODELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BRAND {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.BRANDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.BRANDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal STORE_ROOM_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORDER_ITEM”中列“STORE_ROOM_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STORE_ROOM_NAME {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORDER_ITEM”中列“STORE_ROOM_NAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRADE_PRICE {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.TRADE_PRICEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.TRADE_PRICEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AMOUNT {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.AMOUNTColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVER_AMOUNT {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.OVER_AMOUNTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORDER_ITEM”中列“OVER_AMOUNT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.OVER_AMOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVER_SUM {
                get {
                    try {
                        return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.OVER_SUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORDER_ITEM”中列“OVER_SUM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.OVER_SUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableHC_ORD_ORDER_ITEM.CREATE_DATEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ORDER_ITEM_ID {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.ORDER_ITEM_IDColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.ORDER_ITEM_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODE {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.CODEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalPrice {
                get {
                    return ((decimal)(this[this.tableHC_ORD_ORDER_ITEM.totalPriceColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.totalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ORDER_CODE {
                get {
                    return ((string)(this[this.tableHC_ORD_ORDER_ITEM.ORDER_CODEColumn]));
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.ORDER_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORDER_ITEM.stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORDER_ITEM”中列“state”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsQuickSend {
                get {
                    try {
                        return ((string)(this[this.tableHC_ORD_ORDER_ITEM.IsQuickSendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“HC_ORD_ORDER_ITEM”中列“IsQuickSend”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableHC_ORD_ORDER_ITEM.IsQuickSendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_PRODUCT_IDNull() {
                return this.IsNull(this.tableHC_ORD_ORDER_ITEM.DATA_PRODUCT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_PRODUCT_IDNull() {
                this[this.tableHC_ORD_ORDER_ITEM.DATA_PRODUCT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_ROOM_IDNull() {
                return this.IsNull(this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_ROOM_IDNull() {
                this[this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTORE_ROOM_NAMENull() {
                return this.IsNull(this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTORE_ROOM_NAMENull() {
                this[this.tableHC_ORD_ORDER_ITEM.STORE_ROOM_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVER_AMOUNTNull() {
                return this.IsNull(this.tableHC_ORD_ORDER_ITEM.OVER_AMOUNTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVER_AMOUNTNull() {
                this[this.tableHC_ORD_ORDER_ITEM.OVER_AMOUNTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVER_SUMNull() {
                return this.IsNull(this.tableHC_ORD_ORDER_ITEM.OVER_SUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVER_SUMNull() {
                this[this.tableHC_ORD_ORDER_ITEM.OVER_SUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstateNull() {
                return this.IsNull(this.tableHC_ORD_ORDER_ITEM.stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstateNull() {
                this[this.tableHC_ORD_ORDER_ITEM.stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsQuickSendNull() {
                return this.IsNull(this.tableHC_ORD_ORDER_ITEM.IsQuickSendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsQuickSendNull() {
                this[this.tableHC_ORD_ORDER_ITEM.IsQuickSendColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HC_ORD_ORDER_ITEMRowChangeEvent : global::System.EventArgs {
            
            private HC_ORD_ORDER_ITEMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORDER_ITEMRowChangeEvent(HC_ORD_ORDER_ITEMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HC_ORD_ORDER_ITEMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Emedchina.TradeAssistant.Client.UI.Report.ReportData.QueryOrderItemDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HC_ORD_ORDER_ITEMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HC_ORD_ORDER_ITEMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HC_ORD_ORDER_ITEM";
            tableMapping.ColumnMappings.Add("DATA_PRODUCT_ID", "DATA_PRODUCT_ID");
            tableMapping.ColumnMappings.Add("SALER_ID", "SALER_ID");
            tableMapping.ColumnMappings.Add("SALER_NAME", "SALER_NAME");
            tableMapping.ColumnMappings.Add("SALER_NAME_ABBR", "SALER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("SENDER_ID", "SENDER_ID");
            tableMapping.ColumnMappings.Add("SENDER_NAME", "SENDER_NAME");
            tableMapping.ColumnMappings.Add("SENDER_NAME_ABBR", "SENDER_NAME_ABBR");
            tableMapping.ColumnMappings.Add("MANUFACTURE_ID", "MANUFACTURE_ID");
            tableMapping.ColumnMappings.Add("MANUFACTURE_NAME", "MANUFACTURE_NAME");
            tableMapping.ColumnMappings.Add("MANUFACTURE_NAME_ABBR", "MANUFACTURE_NAME_ABBR");
            tableMapping.ColumnMappings.Add("COMMON_NAME", "COMMON_NAME");
            tableMapping.ColumnMappings.Add("PRODUCT_NAME", "PRODUCT_NAME");
            tableMapping.ColumnMappings.Add("SPEC", "SPEC");
            tableMapping.ColumnMappings.Add("MODEL", "MODEL");
            tableMapping.ColumnMappings.Add("BRAND", "BRAND");
            tableMapping.ColumnMappings.Add("STORE_ROOM_ID", "STORE_ROOM_ID");
            tableMapping.ColumnMappings.Add("STORE_ROOM_NAME", "STORE_ROOM_NAME");
            tableMapping.ColumnMappings.Add("TRADE_PRICE", "TRADE_PRICE");
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT");
            tableMapping.ColumnMappings.Add("OVER_AMOUNT", "OVER_AMOUNT");
            tableMapping.ColumnMappings.Add("OVER_SUM", "OVER_SUM");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("ORDER_ITEM_ID", "ORDER_ITEM_ID");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("totalPrice", "totalPrice");
            tableMapping.ColumnMappings.Add("ORDER_CODE", "ORDER_CODE");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("IsQuickSend", "IsQuickSend");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Emedchina.TradeAssistant.Client.Properties.Settings.Default.TradeAssistantConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @" Select tab.* From ( Select  opi.DATA_PRODUCT_ID, opi.ID AS ORDER_ITEM_ID, op.order_CODE as CODE, 

         opi.COMMON_NAME,opi.PRODUCT_NAME ,opi.SPEC, opi.MODEL, opi.BRAND, opi.STORE_ROOM_ID, 

            opi.STORE_ROOM_NAME, opi.TRADE_PRICE, opi.SUM As totalPrice, opi.AMOUNT, 

        (case when opi.OVER_AMOUNT is null then '-' else

             opi.OVER_AMOUNT end) as OVER_AMOUNT, (case when  

             opi.OVER_SUM is null then '-' else opi.OVER_SUM end) as OVER_SUM, 

            op.CREATE_DATE, opi.SALER_ID, opi.SALER_NAME, opi.SALER_NAME_ABBR,op.ORDER_CODE ,

             opi.SENDER_ID, opi.SENDER_NAME, opi.SENDER_NAME_ABBR, opi.MANUFACTURE_ID,

         (case op.state when '1' then '发送' when '2' then '已阅读' when '3' then '作废' when '4' then '已确认' when '5' then '完成' end) as state,

            opi.MANUFACTURE_NAME, opi.MANUFACTURE_NAME_ABBR, (case opi.IS_QUICKSEND 

             when '0' then '普通' when '1' then '急需' end) IsQuickSend  From 

            HC_ORD_order_ITEM opi,HC_ORD_order op  where opi.order_ID=op.ID )

             as tab  
";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(QueryOrderItemDataSet.HC_ORD_ORDER_ITEMDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual QueryOrderItemDataSet.HC_ORD_ORDER_ITEMDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            QueryOrderItemDataSet.HC_ORD_ORDER_ITEMDataTable dataTable = new QueryOrderItemDataSet.HC_ORD_ORDER_ITEMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591
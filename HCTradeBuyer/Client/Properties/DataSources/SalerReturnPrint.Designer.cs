//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.1433
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Emedchina.TradeAssistant.Client.Properties.DataSources {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SalerReturnPrint")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SalerReturnPrint : global::System.Data.DataSet {
        
        private dtSalerReturnPrintDataTable tabledtSalerReturnPrint;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SalerReturnPrint() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SalerReturnPrint(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtSalerReturnPrint"] != null)) {
                    base.Tables.Add(new dtSalerReturnPrintDataTable(ds.Tables["dtSalerReturnPrint"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtSalerReturnPrintDataTable dtSalerReturnPrint {
            get {
                return this.tabledtSalerReturnPrint;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SalerReturnPrint cln = ((SalerReturnPrint)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtSalerReturnPrint"] != null)) {
                    base.Tables.Add(new dtSalerReturnPrintDataTable(ds.Tables["dtSalerReturnPrint"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtSalerReturnPrint = ((dtSalerReturnPrintDataTable)(base.Tables["dtSalerReturnPrint"]));
            if ((initTable == true)) {
                if ((this.tabledtSalerReturnPrint != null)) {
                    this.tabledtSalerReturnPrint.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SalerReturnPrint";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SalerReturnPrint.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtSalerReturnPrint = new dtSalerReturnPrintDataTable();
            base.Tables.Add(this.tabledtSalerReturnPrint);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtSalerReturnPrint() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SalerReturnPrint ds = new SalerReturnPrint();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtSalerReturnPrintRowChangeEventHandler(object sender, dtSalerReturnPrintRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtSalerReturnPrintDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRowNum;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnbak_medical_name;
            
            private global::System.Data.DataColumn columnbak_product_name;
            
            private global::System.Data.DataColumn columnBAK_MASS_ASSIGNMENT;
            
            private global::System.Data.DataColumn columnbak_medical_mode;
            
            private global::System.Data.DataColumn columnbak_product_spec;
            
            private global::System.Data.DataColumn columnbak_buyer_easy;
            
            private global::System.Data.DataColumn columnlot_no;
            
            private global::System.Data.DataColumn columnwarehouse_name;
            
            private global::System.Data.DataColumn columnreturn_qty;
            
            private global::System.Data.DataColumn columnbuyer_remark;
            
            private global::System.Data.DataColumn columncreate_date_display;
            
            private global::System.Data.DataColumn columnconfirm_date_display;
            
            private global::System.Data.DataColumn columnRemark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalerReturnPrintDataTable() {
                this.TableName = "dtSalerReturnPrint";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSalerReturnPrintDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtSalerReturnPrintDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowNumColumn {
                get {
                    return this.columnRowNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bak_medical_nameColumn {
                get {
                    return this.columnbak_medical_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bak_product_nameColumn {
                get {
                    return this.columnbak_product_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAK_MASS_ASSIGNMENTColumn {
                get {
                    return this.columnBAK_MASS_ASSIGNMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bak_medical_modeColumn {
                get {
                    return this.columnbak_medical_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bak_product_specColumn {
                get {
                    return this.columnbak_product_spec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bak_buyer_easyColumn {
                get {
                    return this.columnbak_buyer_easy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn lot_noColumn {
                get {
                    return this.columnlot_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn warehouse_nameColumn {
                get {
                    return this.columnwarehouse_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn return_qtyColumn {
                get {
                    return this.columnreturn_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn buyer_remarkColumn {
                get {
                    return this.columnbuyer_remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_date_displayColumn {
                get {
                    return this.columncreate_date_display;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn confirm_date_displayColumn {
                get {
                    return this.columnconfirm_date_display;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalerReturnPrintRow this[int index] {
                get {
                    return ((dtSalerReturnPrintRow)(this.Rows[index]));
                }
            }
            
            public event dtSalerReturnPrintRowChangeEventHandler dtSalerReturnPrintRowChanging;
            
            public event dtSalerReturnPrintRowChangeEventHandler dtSalerReturnPrintRowChanged;
            
            public event dtSalerReturnPrintRowChangeEventHandler dtSalerReturnPrintRowDeleting;
            
            public event dtSalerReturnPrintRowChangeEventHandler dtSalerReturnPrintRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtSalerReturnPrintRow(dtSalerReturnPrintRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalerReturnPrintRow AdddtSalerReturnPrintRow(string RowNum, string ID, string bak_medical_name, string bak_product_name, string BAK_MASS_ASSIGNMENT, string bak_medical_mode, string bak_product_spec, string bak_buyer_easy, string lot_no, string warehouse_name, string return_qty, string buyer_remark, string create_date_display, string confirm_date_display, string Remark) {
                dtSalerReturnPrintRow rowdtSalerReturnPrintRow = ((dtSalerReturnPrintRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RowNum,
                        ID,
                        bak_medical_name,
                        bak_product_name,
                        BAK_MASS_ASSIGNMENT,
                        bak_medical_mode,
                        bak_product_spec,
                        bak_buyer_easy,
                        lot_no,
                        warehouse_name,
                        return_qty,
                        buyer_remark,
                        create_date_display,
                        confirm_date_display,
                        Remark};
                rowdtSalerReturnPrintRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtSalerReturnPrintRow);
                return rowdtSalerReturnPrintRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtSalerReturnPrintDataTable cln = ((dtSalerReturnPrintDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtSalerReturnPrintDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRowNum = base.Columns["RowNum"];
                this.columnID = base.Columns["ID"];
                this.columnbak_medical_name = base.Columns["bak_medical_name"];
                this.columnbak_product_name = base.Columns["bak_product_name"];
                this.columnBAK_MASS_ASSIGNMENT = base.Columns["BAK_MASS_ASSIGNMENT"];
                this.columnbak_medical_mode = base.Columns["bak_medical_mode"];
                this.columnbak_product_spec = base.Columns["bak_product_spec"];
                this.columnbak_buyer_easy = base.Columns["bak_buyer_easy"];
                this.columnlot_no = base.Columns["lot_no"];
                this.columnwarehouse_name = base.Columns["warehouse_name"];
                this.columnreturn_qty = base.Columns["return_qty"];
                this.columnbuyer_remark = base.Columns["buyer_remark"];
                this.columncreate_date_display = base.Columns["create_date_display"];
                this.columnconfirm_date_display = base.Columns["confirm_date_display"];
                this.columnRemark = base.Columns["Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRowNum = new global::System.Data.DataColumn("RowNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowNum);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnbak_medical_name = new global::System.Data.DataColumn("bak_medical_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbak_medical_name);
                this.columnbak_product_name = new global::System.Data.DataColumn("bak_product_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbak_product_name);
                this.columnBAK_MASS_ASSIGNMENT = new global::System.Data.DataColumn("BAK_MASS_ASSIGNMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAK_MASS_ASSIGNMENT);
                this.columnbak_medical_mode = new global::System.Data.DataColumn("bak_medical_mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbak_medical_mode);
                this.columnbak_product_spec = new global::System.Data.DataColumn("bak_product_spec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbak_product_spec);
                this.columnbak_buyer_easy = new global::System.Data.DataColumn("bak_buyer_easy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbak_buyer_easy);
                this.columnlot_no = new global::System.Data.DataColumn("lot_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlot_no);
                this.columnwarehouse_name = new global::System.Data.DataColumn("warehouse_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwarehouse_name);
                this.columnreturn_qty = new global::System.Data.DataColumn("return_qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreturn_qty);
                this.columnbuyer_remark = new global::System.Data.DataColumn("buyer_remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbuyer_remark);
                this.columncreate_date_display = new global::System.Data.DataColumn("create_date_display", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date_display);
                this.columnconfirm_date_display = new global::System.Data.DataColumn("confirm_date_display", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconfirm_date_display);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnID.Caption = "Column1";
                this.columnbak_medical_name.Caption = "Column1";
                this.columnbak_product_name.Caption = "Column1";
                this.columnBAK_MASS_ASSIGNMENT.Caption = "Column1";
                this.columnbak_medical_mode.Caption = "Column1";
                this.columnbak_product_spec.Caption = "Column1";
                this.columnbak_buyer_easy.Caption = "Column1";
                this.columnlot_no.Caption = "Column1";
                this.columnwarehouse_name.Caption = "Column1";
                this.columnreturn_qty.Caption = "Column1";
                this.columnbuyer_remark.Caption = "Column1";
                this.columncreate_date_display.Caption = "Column1";
                this.columnconfirm_date_display.Caption = "Column1";
                this.columnRemark.Caption = "Column1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalerReturnPrintRow NewdtSalerReturnPrintRow() {
                return ((dtSalerReturnPrintRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtSalerReturnPrintRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtSalerReturnPrintRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtSalerReturnPrintRowChanged != null)) {
                    this.dtSalerReturnPrintRowChanged(this, new dtSalerReturnPrintRowChangeEvent(((dtSalerReturnPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtSalerReturnPrintRowChanging != null)) {
                    this.dtSalerReturnPrintRowChanging(this, new dtSalerReturnPrintRowChangeEvent(((dtSalerReturnPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtSalerReturnPrintRowDeleted != null)) {
                    this.dtSalerReturnPrintRowDeleted(this, new dtSalerReturnPrintRowChangeEvent(((dtSalerReturnPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtSalerReturnPrintRowDeleting != null)) {
                    this.dtSalerReturnPrintRowDeleting(this, new dtSalerReturnPrintRowChangeEvent(((dtSalerReturnPrintRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtSalerReturnPrintRow(dtSalerReturnPrintRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalerReturnPrint ds = new SalerReturnPrint();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtSalerReturnPrintDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtSalerReturnPrintRow : global::System.Data.DataRow {
            
            private dtSalerReturnPrintDataTable tabledtSalerReturnPrint;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtSalerReturnPrintRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtSalerReturnPrint = ((dtSalerReturnPrintDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowNum {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.RowNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“RowNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.RowNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bak_medical_name {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.bak_medical_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“bak_medical_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.bak_medical_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bak_product_name {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.bak_product_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“bak_product_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.bak_product_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BAK_MASS_ASSIGNMENT {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.BAK_MASS_ASSIGNMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“BAK_MASS_ASSIGNMENT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.BAK_MASS_ASSIGNMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bak_medical_mode {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.bak_medical_modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“bak_medical_mode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.bak_medical_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bak_product_spec {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.bak_product_specColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“bak_product_spec”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.bak_product_specColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bak_buyer_easy {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.bak_buyer_easyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“bak_buyer_easy”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.bak_buyer_easyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string lot_no {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.lot_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“lot_no”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.lot_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string warehouse_name {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.warehouse_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“warehouse_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.warehouse_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string return_qty {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.return_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“return_qty”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.return_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string buyer_remark {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.buyer_remarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“buyer_remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.buyer_remarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_date_display {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.create_date_displayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“create_date_display”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.create_date_displayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string confirm_date_display {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.confirm_date_displayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“confirm_date_display”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.confirm_date_displayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tabledtSalerReturnPrint.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“dtSalerReturnPrint”中列“Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabledtSalerReturnPrint.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowNumNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.RowNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowNumNull() {
                this[this.tabledtSalerReturnPrint.RowNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tabledtSalerReturnPrint.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbak_medical_nameNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.bak_medical_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbak_medical_nameNull() {
                this[this.tabledtSalerReturnPrint.bak_medical_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbak_product_nameNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.bak_product_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbak_product_nameNull() {
                this[this.tabledtSalerReturnPrint.bak_product_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAK_MASS_ASSIGNMENTNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.BAK_MASS_ASSIGNMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAK_MASS_ASSIGNMENTNull() {
                this[this.tabledtSalerReturnPrint.BAK_MASS_ASSIGNMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbak_medical_modeNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.bak_medical_modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbak_medical_modeNull() {
                this[this.tabledtSalerReturnPrint.bak_medical_modeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbak_product_specNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.bak_product_specColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbak_product_specNull() {
                this[this.tabledtSalerReturnPrint.bak_product_specColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbak_buyer_easyNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.bak_buyer_easyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbak_buyer_easyNull() {
                this[this.tabledtSalerReturnPrint.bak_buyer_easyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islot_noNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.lot_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlot_noNull() {
                this[this.tabledtSalerReturnPrint.lot_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswarehouse_nameNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.warehouse_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwarehouse_nameNull() {
                this[this.tabledtSalerReturnPrint.warehouse_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isreturn_qtyNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.return_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setreturn_qtyNull() {
                this[this.tabledtSalerReturnPrint.return_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbuyer_remarkNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.buyer_remarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbuyer_remarkNull() {
                this[this.tabledtSalerReturnPrint.buyer_remarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_date_displayNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.create_date_displayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_date_displayNull() {
                this[this.tabledtSalerReturnPrint.create_date_displayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isconfirm_date_displayNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.confirm_date_displayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setconfirm_date_displayNull() {
                this[this.tabledtSalerReturnPrint.confirm_date_displayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tabledtSalerReturnPrint.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tabledtSalerReturnPrint.RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtSalerReturnPrintRowChangeEvent : global::System.EventArgs {
            
            private dtSalerReturnPrintRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalerReturnPrintRowChangeEvent(dtSalerReturnPrintRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtSalerReturnPrintRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591